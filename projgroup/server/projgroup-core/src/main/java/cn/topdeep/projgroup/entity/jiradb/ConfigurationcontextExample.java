package cn.topdeep.projgroup.entity.jiradb;

import common.entity.Page;
import java.util.ArrayList;
import java.util.List;

public class ConfigurationcontextExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table configurationcontext
     *
     * @mbggenerated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table configurationcontext
     *
     * @mbggenerated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table configurationcontext
     *
     * @mbggenerated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table configurationcontext
     *
     * @mbggenerated
     */
    protected Page page;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table configurationcontext
     *
     * @mbggenerated
     */
    public ConfigurationcontextExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table configurationcontext
     *
     * @mbggenerated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table configurationcontext
     *
     * @mbggenerated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table configurationcontext
     *
     * @mbggenerated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table configurationcontext
     *
     * @mbggenerated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table configurationcontext
     *
     * @mbggenerated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table configurationcontext
     *
     * @mbggenerated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table configurationcontext
     *
     * @mbggenerated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table configurationcontext
     *
     * @mbggenerated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table configurationcontext
     *
     * @mbggenerated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table configurationcontext
     *
     * @mbggenerated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table configurationcontext
     *
     * @mbggenerated
     */
    public void setPage(Page page) {
        this.page=page;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table configurationcontext
     *
     * @mbggenerated
     */
    public Page getPage() {
        return page;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table configurationcontext
     *
     * @mbggenerated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("ID is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("ID is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Long value) {
            addCriterion("ID =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Long value) {
            addCriterion("ID <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Long value) {
            addCriterion("ID >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Long value) {
            addCriterion("ID >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Long value) {
            addCriterion("ID <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Long value) {
            addCriterion("ID <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Long> values) {
            addCriterion("ID in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Long> values) {
            addCriterion("ID not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Long value1, Long value2) {
            addCriterion("ID between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Long value1, Long value2) {
            addCriterion("ID not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andProjectcategoryIsNull() {
            addCriterion("PROJECTCATEGORY is null");
            return (Criteria) this;
        }

        public Criteria andProjectcategoryIsNotNull() {
            addCriterion("PROJECTCATEGORY is not null");
            return (Criteria) this;
        }

        public Criteria andProjectcategoryEqualTo(Long value) {
            addCriterion("PROJECTCATEGORY =", value, "projectcategory");
            return (Criteria) this;
        }

        public Criteria andProjectcategoryNotEqualTo(Long value) {
            addCriterion("PROJECTCATEGORY <>", value, "projectcategory");
            return (Criteria) this;
        }

        public Criteria andProjectcategoryGreaterThan(Long value) {
            addCriterion("PROJECTCATEGORY >", value, "projectcategory");
            return (Criteria) this;
        }

        public Criteria andProjectcategoryGreaterThanOrEqualTo(Long value) {
            addCriterion("PROJECTCATEGORY >=", value, "projectcategory");
            return (Criteria) this;
        }

        public Criteria andProjectcategoryLessThan(Long value) {
            addCriterion("PROJECTCATEGORY <", value, "projectcategory");
            return (Criteria) this;
        }

        public Criteria andProjectcategoryLessThanOrEqualTo(Long value) {
            addCriterion("PROJECTCATEGORY <=", value, "projectcategory");
            return (Criteria) this;
        }

        public Criteria andProjectcategoryIn(List<Long> values) {
            addCriterion("PROJECTCATEGORY in", values, "projectcategory");
            return (Criteria) this;
        }

        public Criteria andProjectcategoryNotIn(List<Long> values) {
            addCriterion("PROJECTCATEGORY not in", values, "projectcategory");
            return (Criteria) this;
        }

        public Criteria andProjectcategoryBetween(Long value1, Long value2) {
            addCriterion("PROJECTCATEGORY between", value1, value2, "projectcategory");
            return (Criteria) this;
        }

        public Criteria andProjectcategoryNotBetween(Long value1, Long value2) {
            addCriterion("PROJECTCATEGORY not between", value1, value2, "projectcategory");
            return (Criteria) this;
        }

        public Criteria andProjectIsNull() {
            addCriterion("PROJECT is null");
            return (Criteria) this;
        }

        public Criteria andProjectIsNotNull() {
            addCriterion("PROJECT is not null");
            return (Criteria) this;
        }

        public Criteria andProjectEqualTo(Long value) {
            addCriterion("PROJECT =", value, "project");
            return (Criteria) this;
        }

        public Criteria andProjectNotEqualTo(Long value) {
            addCriterion("PROJECT <>", value, "project");
            return (Criteria) this;
        }

        public Criteria andProjectGreaterThan(Long value) {
            addCriterion("PROJECT >", value, "project");
            return (Criteria) this;
        }

        public Criteria andProjectGreaterThanOrEqualTo(Long value) {
            addCriterion("PROJECT >=", value, "project");
            return (Criteria) this;
        }

        public Criteria andProjectLessThan(Long value) {
            addCriterion("PROJECT <", value, "project");
            return (Criteria) this;
        }

        public Criteria andProjectLessThanOrEqualTo(Long value) {
            addCriterion("PROJECT <=", value, "project");
            return (Criteria) this;
        }

        public Criteria andProjectIn(List<Long> values) {
            addCriterion("PROJECT in", values, "project");
            return (Criteria) this;
        }

        public Criteria andProjectNotIn(List<Long> values) {
            addCriterion("PROJECT not in", values, "project");
            return (Criteria) this;
        }

        public Criteria andProjectBetween(Long value1, Long value2) {
            addCriterion("PROJECT between", value1, value2, "project");
            return (Criteria) this;
        }

        public Criteria andProjectNotBetween(Long value1, Long value2) {
            addCriterion("PROJECT not between", value1, value2, "project");
            return (Criteria) this;
        }

        public Criteria andCustomfieldIsNull() {
            addCriterion("customfield is null");
            return (Criteria) this;
        }

        public Criteria andCustomfieldIsNotNull() {
            addCriterion("customfield is not null");
            return (Criteria) this;
        }

        public Criteria andCustomfieldEqualTo(String value) {
            addCriterion("customfield =", value, "customfield");
            return (Criteria) this;
        }

        public Criteria andCustomfieldNotEqualTo(String value) {
            addCriterion("customfield <>", value, "customfield");
            return (Criteria) this;
        }

        public Criteria andCustomfieldGreaterThan(String value) {
            addCriterion("customfield >", value, "customfield");
            return (Criteria) this;
        }

        public Criteria andCustomfieldGreaterThanOrEqualTo(String value) {
            addCriterion("customfield >=", value, "customfield");
            return (Criteria) this;
        }

        public Criteria andCustomfieldLessThan(String value) {
            addCriterion("customfield <", value, "customfield");
            return (Criteria) this;
        }

        public Criteria andCustomfieldLessThanOrEqualTo(String value) {
            addCriterion("customfield <=", value, "customfield");
            return (Criteria) this;
        }

        public Criteria andCustomfieldLike(String value) {
            addCriterion("customfield like", value, "customfield");
            return (Criteria) this;
        }

        public Criteria andCustomfieldNotLike(String value) {
            addCriterion("customfield not like", value, "customfield");
            return (Criteria) this;
        }

        public Criteria andCustomfieldIn(List<String> values) {
            addCriterion("customfield in", values, "customfield");
            return (Criteria) this;
        }

        public Criteria andCustomfieldNotIn(List<String> values) {
            addCriterion("customfield not in", values, "customfield");
            return (Criteria) this;
        }

        public Criteria andCustomfieldBetween(String value1, String value2) {
            addCriterion("customfield between", value1, value2, "customfield");
            return (Criteria) this;
        }

        public Criteria andCustomfieldNotBetween(String value1, String value2) {
            addCriterion("customfield not between", value1, value2, "customfield");
            return (Criteria) this;
        }

        public Criteria andFieldconfigschemeIsNull() {
            addCriterion("FIELDCONFIGSCHEME is null");
            return (Criteria) this;
        }

        public Criteria andFieldconfigschemeIsNotNull() {
            addCriterion("FIELDCONFIGSCHEME is not null");
            return (Criteria) this;
        }

        public Criteria andFieldconfigschemeEqualTo(Long value) {
            addCriterion("FIELDCONFIGSCHEME =", value, "fieldconfigscheme");
            return (Criteria) this;
        }

        public Criteria andFieldconfigschemeNotEqualTo(Long value) {
            addCriterion("FIELDCONFIGSCHEME <>", value, "fieldconfigscheme");
            return (Criteria) this;
        }

        public Criteria andFieldconfigschemeGreaterThan(Long value) {
            addCriterion("FIELDCONFIGSCHEME >", value, "fieldconfigscheme");
            return (Criteria) this;
        }

        public Criteria andFieldconfigschemeGreaterThanOrEqualTo(Long value) {
            addCriterion("FIELDCONFIGSCHEME >=", value, "fieldconfigscheme");
            return (Criteria) this;
        }

        public Criteria andFieldconfigschemeLessThan(Long value) {
            addCriterion("FIELDCONFIGSCHEME <", value, "fieldconfigscheme");
            return (Criteria) this;
        }

        public Criteria andFieldconfigschemeLessThanOrEqualTo(Long value) {
            addCriterion("FIELDCONFIGSCHEME <=", value, "fieldconfigscheme");
            return (Criteria) this;
        }

        public Criteria andFieldconfigschemeIn(List<Long> values) {
            addCriterion("FIELDCONFIGSCHEME in", values, "fieldconfigscheme");
            return (Criteria) this;
        }

        public Criteria andFieldconfigschemeNotIn(List<Long> values) {
            addCriterion("FIELDCONFIGSCHEME not in", values, "fieldconfigscheme");
            return (Criteria) this;
        }

        public Criteria andFieldconfigschemeBetween(Long value1, Long value2) {
            addCriterion("FIELDCONFIGSCHEME between", value1, value2, "fieldconfigscheme");
            return (Criteria) this;
        }

        public Criteria andFieldconfigschemeNotBetween(Long value1, Long value2) {
            addCriterion("FIELDCONFIGSCHEME not between", value1, value2, "fieldconfigscheme");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table configurationcontext
     *
     * @mbggenerated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table configurationcontext
     *
     * @mbggenerated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}