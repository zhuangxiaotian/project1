package cn.topdeep.projgroup.entity.db;

import common.entity.Page;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class ProjectExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table t_project
     *
     * @mbggenerated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table t_project
     *
     * @mbggenerated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table t_project
     *
     * @mbggenerated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table t_project
     *
     * @mbggenerated
     */
    protected Page page;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_project
     *
     * @mbggenerated
     */
    public ProjectExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_project
     *
     * @mbggenerated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_project
     *
     * @mbggenerated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_project
     *
     * @mbggenerated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_project
     *
     * @mbggenerated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_project
     *
     * @mbggenerated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_project
     *
     * @mbggenerated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_project
     *
     * @mbggenerated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_project
     *
     * @mbggenerated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_project
     *
     * @mbggenerated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_project
     *
     * @mbggenerated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_project
     *
     * @mbggenerated
     */
    public void setPage(Page page) {
        this.page=page;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_project
     *
     * @mbggenerated
     */
    public Page getPage() {
        return page;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table t_project
     *
     * @mbggenerated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andProjIdIsNull() {
            addCriterion("PROJ_ID is null");
            return (Criteria) this;
        }

        public Criteria andProjIdIsNotNull() {
            addCriterion("PROJ_ID is not null");
            return (Criteria) this;
        }

        public Criteria andProjIdEqualTo(Integer value) {
            addCriterion("PROJ_ID =", value, "projId");
            return (Criteria) this;
        }

        public Criteria andProjIdNotEqualTo(Integer value) {
            addCriterion("PROJ_ID <>", value, "projId");
            return (Criteria) this;
        }

        public Criteria andProjIdGreaterThan(Integer value) {
            addCriterion("PROJ_ID >", value, "projId");
            return (Criteria) this;
        }

        public Criteria andProjIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("PROJ_ID >=", value, "projId");
            return (Criteria) this;
        }

        public Criteria andProjIdLessThan(Integer value) {
            addCriterion("PROJ_ID <", value, "projId");
            return (Criteria) this;
        }

        public Criteria andProjIdLessThanOrEqualTo(Integer value) {
            addCriterion("PROJ_ID <=", value, "projId");
            return (Criteria) this;
        }

        public Criteria andProjIdIn(List<Integer> values) {
            addCriterion("PROJ_ID in", values, "projId");
            return (Criteria) this;
        }

        public Criteria andProjIdNotIn(List<Integer> values) {
            addCriterion("PROJ_ID not in", values, "projId");
            return (Criteria) this;
        }

        public Criteria andProjIdBetween(Integer value1, Integer value2) {
            addCriterion("PROJ_ID between", value1, value2, "projId");
            return (Criteria) this;
        }

        public Criteria andProjIdNotBetween(Integer value1, Integer value2) {
            addCriterion("PROJ_ID not between", value1, value2, "projId");
            return (Criteria) this;
        }

        public Criteria andProjectActualEndDateIsNull() {
            addCriterion("PROJECT_ACTUAL_END_DATE is null");
            return (Criteria) this;
        }

        public Criteria andProjectActualEndDateIsNotNull() {
            addCriterion("PROJECT_ACTUAL_END_DATE is not null");
            return (Criteria) this;
        }

        public Criteria andProjectActualEndDateEqualTo(Date value) {
            addCriterion("PROJECT_ACTUAL_END_DATE =", value, "projectActualEndDate");
            return (Criteria) this;
        }

        public Criteria andProjectActualEndDateNotEqualTo(Date value) {
            addCriterion("PROJECT_ACTUAL_END_DATE <>", value, "projectActualEndDate");
            return (Criteria) this;
        }

        public Criteria andProjectActualEndDateGreaterThan(Date value) {
            addCriterion("PROJECT_ACTUAL_END_DATE >", value, "projectActualEndDate");
            return (Criteria) this;
        }

        public Criteria andProjectActualEndDateGreaterThanOrEqualTo(Date value) {
            addCriterion("PROJECT_ACTUAL_END_DATE >=", value, "projectActualEndDate");
            return (Criteria) this;
        }

        public Criteria andProjectActualEndDateLessThan(Date value) {
            addCriterion("PROJECT_ACTUAL_END_DATE <", value, "projectActualEndDate");
            return (Criteria) this;
        }

        public Criteria andProjectActualEndDateLessThanOrEqualTo(Date value) {
            addCriterion("PROJECT_ACTUAL_END_DATE <=", value, "projectActualEndDate");
            return (Criteria) this;
        }

        public Criteria andProjectActualEndDateIn(List<Date> values) {
            addCriterion("PROJECT_ACTUAL_END_DATE in", values, "projectActualEndDate");
            return (Criteria) this;
        }

        public Criteria andProjectActualEndDateNotIn(List<Date> values) {
            addCriterion("PROJECT_ACTUAL_END_DATE not in", values, "projectActualEndDate");
            return (Criteria) this;
        }

        public Criteria andProjectActualEndDateBetween(Date value1, Date value2) {
            addCriterion("PROJECT_ACTUAL_END_DATE between", value1, value2, "projectActualEndDate");
            return (Criteria) this;
        }

        public Criteria andProjectActualEndDateNotBetween(Date value1, Date value2) {
            addCriterion("PROJECT_ACTUAL_END_DATE not between", value1, value2, "projectActualEndDate");
            return (Criteria) this;
        }

        public Criteria andProjectActualStartDateIsNull() {
            addCriterion("PROJECT_ACTUAL_START_DATE is null");
            return (Criteria) this;
        }

        public Criteria andProjectActualStartDateIsNotNull() {
            addCriterion("PROJECT_ACTUAL_START_DATE is not null");
            return (Criteria) this;
        }

        public Criteria andProjectActualStartDateEqualTo(Date value) {
            addCriterion("PROJECT_ACTUAL_START_DATE =", value, "projectActualStartDate");
            return (Criteria) this;
        }

        public Criteria andProjectActualStartDateNotEqualTo(Date value) {
            addCriterion("PROJECT_ACTUAL_START_DATE <>", value, "projectActualStartDate");
            return (Criteria) this;
        }

        public Criteria andProjectActualStartDateGreaterThan(Date value) {
            addCriterion("PROJECT_ACTUAL_START_DATE >", value, "projectActualStartDate");
            return (Criteria) this;
        }

        public Criteria andProjectActualStartDateGreaterThanOrEqualTo(Date value) {
            addCriterion("PROJECT_ACTUAL_START_DATE >=", value, "projectActualStartDate");
            return (Criteria) this;
        }

        public Criteria andProjectActualStartDateLessThan(Date value) {
            addCriterion("PROJECT_ACTUAL_START_DATE <", value, "projectActualStartDate");
            return (Criteria) this;
        }

        public Criteria andProjectActualStartDateLessThanOrEqualTo(Date value) {
            addCriterion("PROJECT_ACTUAL_START_DATE <=", value, "projectActualStartDate");
            return (Criteria) this;
        }

        public Criteria andProjectActualStartDateIn(List<Date> values) {
            addCriterion("PROJECT_ACTUAL_START_DATE in", values, "projectActualStartDate");
            return (Criteria) this;
        }

        public Criteria andProjectActualStartDateNotIn(List<Date> values) {
            addCriterion("PROJECT_ACTUAL_START_DATE not in", values, "projectActualStartDate");
            return (Criteria) this;
        }

        public Criteria andProjectActualStartDateBetween(Date value1, Date value2) {
            addCriterion("PROJECT_ACTUAL_START_DATE between", value1, value2, "projectActualStartDate");
            return (Criteria) this;
        }

        public Criteria andProjectActualStartDateNotBetween(Date value1, Date value2) {
            addCriterion("PROJECT_ACTUAL_START_DATE not between", value1, value2, "projectActualStartDate");
            return (Criteria) this;
        }

        public Criteria andProjectDescIsNull() {
            addCriterion("PROJECT_DESC is null");
            return (Criteria) this;
        }

        public Criteria andProjectDescIsNotNull() {
            addCriterion("PROJECT_DESC is not null");
            return (Criteria) this;
        }

        public Criteria andProjectDescEqualTo(String value) {
            addCriterion("PROJECT_DESC =", value, "projectDesc");
            return (Criteria) this;
        }

        public Criteria andProjectDescNotEqualTo(String value) {
            addCriterion("PROJECT_DESC <>", value, "projectDesc");
            return (Criteria) this;
        }

        public Criteria andProjectDescGreaterThan(String value) {
            addCriterion("PROJECT_DESC >", value, "projectDesc");
            return (Criteria) this;
        }

        public Criteria andProjectDescGreaterThanOrEqualTo(String value) {
            addCriterion("PROJECT_DESC >=", value, "projectDesc");
            return (Criteria) this;
        }

        public Criteria andProjectDescLessThan(String value) {
            addCriterion("PROJECT_DESC <", value, "projectDesc");
            return (Criteria) this;
        }

        public Criteria andProjectDescLessThanOrEqualTo(String value) {
            addCriterion("PROJECT_DESC <=", value, "projectDesc");
            return (Criteria) this;
        }

        public Criteria andProjectDescLike(String value) {
            addCriterion("PROJECT_DESC like", value, "projectDesc");
            return (Criteria) this;
        }

        public Criteria andProjectDescNotLike(String value) {
            addCriterion("PROJECT_DESC not like", value, "projectDesc");
            return (Criteria) this;
        }

        public Criteria andProjectDescIn(List<String> values) {
            addCriterion("PROJECT_DESC in", values, "projectDesc");
            return (Criteria) this;
        }

        public Criteria andProjectDescNotIn(List<String> values) {
            addCriterion("PROJECT_DESC not in", values, "projectDesc");
            return (Criteria) this;
        }

        public Criteria andProjectDescBetween(String value1, String value2) {
            addCriterion("PROJECT_DESC between", value1, value2, "projectDesc");
            return (Criteria) this;
        }

        public Criteria andProjectDescNotBetween(String value1, String value2) {
            addCriterion("PROJECT_DESC not between", value1, value2, "projectDesc");
            return (Criteria) this;
        }

        public Criteria andProjectNameIsNull() {
            addCriterion("PROJECT_NAME is null");
            return (Criteria) this;
        }

        public Criteria andProjectNameIsNotNull() {
            addCriterion("PROJECT_NAME is not null");
            return (Criteria) this;
        }

        public Criteria andProjectNameEqualTo(String value) {
            addCriterion("PROJECT_NAME =", value, "projectName");
            return (Criteria) this;
        }

        public Criteria andProjectNameNotEqualTo(String value) {
            addCriterion("PROJECT_NAME <>", value, "projectName");
            return (Criteria) this;
        }

        public Criteria andProjectNameGreaterThan(String value) {
            addCriterion("PROJECT_NAME >", value, "projectName");
            return (Criteria) this;
        }

        public Criteria andProjectNameGreaterThanOrEqualTo(String value) {
            addCriterion("PROJECT_NAME >=", value, "projectName");
            return (Criteria) this;
        }

        public Criteria andProjectNameLessThan(String value) {
            addCriterion("PROJECT_NAME <", value, "projectName");
            return (Criteria) this;
        }

        public Criteria andProjectNameLessThanOrEqualTo(String value) {
            addCriterion("PROJECT_NAME <=", value, "projectName");
            return (Criteria) this;
        }

        public Criteria andProjectNameLike(String value) {
            addCriterion("PROJECT_NAME like", value, "projectName");
            return (Criteria) this;
        }

        public Criteria andProjectNameNotLike(String value) {
            addCriterion("PROJECT_NAME not like", value, "projectName");
            return (Criteria) this;
        }

        public Criteria andProjectNameIn(List<String> values) {
            addCriterion("PROJECT_NAME in", values, "projectName");
            return (Criteria) this;
        }

        public Criteria andProjectNameNotIn(List<String> values) {
            addCriterion("PROJECT_NAME not in", values, "projectName");
            return (Criteria) this;
        }

        public Criteria andProjectNameBetween(String value1, String value2) {
            addCriterion("PROJECT_NAME between", value1, value2, "projectName");
            return (Criteria) this;
        }

        public Criteria andProjectNameNotBetween(String value1, String value2) {
            addCriterion("PROJECT_NAME not between", value1, value2, "projectName");
            return (Criteria) this;
        }

        public Criteria andProjectPlanEndDateIsNull() {
            addCriterion("PROJECT_PLAN_END_DATE is null");
            return (Criteria) this;
        }

        public Criteria andProjectPlanEndDateIsNotNull() {
            addCriterion("PROJECT_PLAN_END_DATE is not null");
            return (Criteria) this;
        }

        public Criteria andProjectPlanEndDateEqualTo(Date value) {
            addCriterion("PROJECT_PLAN_END_DATE =", value, "projectPlanEndDate");
            return (Criteria) this;
        }

        public Criteria andProjectPlanEndDateNotEqualTo(Date value) {
            addCriterion("PROJECT_PLAN_END_DATE <>", value, "projectPlanEndDate");
            return (Criteria) this;
        }

        public Criteria andProjectPlanEndDateGreaterThan(Date value) {
            addCriterion("PROJECT_PLAN_END_DATE >", value, "projectPlanEndDate");
            return (Criteria) this;
        }

        public Criteria andProjectPlanEndDateGreaterThanOrEqualTo(Date value) {
            addCriterion("PROJECT_PLAN_END_DATE >=", value, "projectPlanEndDate");
            return (Criteria) this;
        }

        public Criteria andProjectPlanEndDateLessThan(Date value) {
            addCriterion("PROJECT_PLAN_END_DATE <", value, "projectPlanEndDate");
            return (Criteria) this;
        }

        public Criteria andProjectPlanEndDateLessThanOrEqualTo(Date value) {
            addCriterion("PROJECT_PLAN_END_DATE <=", value, "projectPlanEndDate");
            return (Criteria) this;
        }

        public Criteria andProjectPlanEndDateIn(List<Date> values) {
            addCriterion("PROJECT_PLAN_END_DATE in", values, "projectPlanEndDate");
            return (Criteria) this;
        }

        public Criteria andProjectPlanEndDateNotIn(List<Date> values) {
            addCriterion("PROJECT_PLAN_END_DATE not in", values, "projectPlanEndDate");
            return (Criteria) this;
        }

        public Criteria andProjectPlanEndDateBetween(Date value1, Date value2) {
            addCriterion("PROJECT_PLAN_END_DATE between", value1, value2, "projectPlanEndDate");
            return (Criteria) this;
        }

        public Criteria andProjectPlanEndDateNotBetween(Date value1, Date value2) {
            addCriterion("PROJECT_PLAN_END_DATE not between", value1, value2, "projectPlanEndDate");
            return (Criteria) this;
        }

        public Criteria andProjectPlanStartDateIsNull() {
            addCriterion("PROJECT_PLAN_START_DATE is null");
            return (Criteria) this;
        }

        public Criteria andProjectPlanStartDateIsNotNull() {
            addCriterion("PROJECT_PLAN_START_DATE is not null");
            return (Criteria) this;
        }

        public Criteria andProjectPlanStartDateEqualTo(Date value) {
            addCriterion("PROJECT_PLAN_START_DATE =", value, "projectPlanStartDate");
            return (Criteria) this;
        }

        public Criteria andProjectPlanStartDateNotEqualTo(Date value) {
            addCriterion("PROJECT_PLAN_START_DATE <>", value, "projectPlanStartDate");
            return (Criteria) this;
        }

        public Criteria andProjectPlanStartDateGreaterThan(Date value) {
            addCriterion("PROJECT_PLAN_START_DATE >", value, "projectPlanStartDate");
            return (Criteria) this;
        }

        public Criteria andProjectPlanStartDateGreaterThanOrEqualTo(Date value) {
            addCriterion("PROJECT_PLAN_START_DATE >=", value, "projectPlanStartDate");
            return (Criteria) this;
        }

        public Criteria andProjectPlanStartDateLessThan(Date value) {
            addCriterion("PROJECT_PLAN_START_DATE <", value, "projectPlanStartDate");
            return (Criteria) this;
        }

        public Criteria andProjectPlanStartDateLessThanOrEqualTo(Date value) {
            addCriterion("PROJECT_PLAN_START_DATE <=", value, "projectPlanStartDate");
            return (Criteria) this;
        }

        public Criteria andProjectPlanStartDateIn(List<Date> values) {
            addCriterion("PROJECT_PLAN_START_DATE in", values, "projectPlanStartDate");
            return (Criteria) this;
        }

        public Criteria andProjectPlanStartDateNotIn(List<Date> values) {
            addCriterion("PROJECT_PLAN_START_DATE not in", values, "projectPlanStartDate");
            return (Criteria) this;
        }

        public Criteria andProjectPlanStartDateBetween(Date value1, Date value2) {
            addCriterion("PROJECT_PLAN_START_DATE between", value1, value2, "projectPlanStartDate");
            return (Criteria) this;
        }

        public Criteria andProjectPlanStartDateNotBetween(Date value1, Date value2) {
            addCriterion("PROJECT_PLAN_START_DATE not between", value1, value2, "projectPlanStartDate");
            return (Criteria) this;
        }

        public Criteria andProjectShortNameIsNull() {
            addCriterion("PROJECT_SHORT_NAME is null");
            return (Criteria) this;
        }

        public Criteria andProjectShortNameIsNotNull() {
            addCriterion("PROJECT_SHORT_NAME is not null");
            return (Criteria) this;
        }

        public Criteria andProjectShortNameEqualTo(String value) {
            addCriterion("PROJECT_SHORT_NAME =", value, "projectShortName");
            return (Criteria) this;
        }

        public Criteria andProjectShortNameNotEqualTo(String value) {
            addCriterion("PROJECT_SHORT_NAME <>", value, "projectShortName");
            return (Criteria) this;
        }

        public Criteria andProjectShortNameGreaterThan(String value) {
            addCriterion("PROJECT_SHORT_NAME >", value, "projectShortName");
            return (Criteria) this;
        }

        public Criteria andProjectShortNameGreaterThanOrEqualTo(String value) {
            addCriterion("PROJECT_SHORT_NAME >=", value, "projectShortName");
            return (Criteria) this;
        }

        public Criteria andProjectShortNameLessThan(String value) {
            addCriterion("PROJECT_SHORT_NAME <", value, "projectShortName");
            return (Criteria) this;
        }

        public Criteria andProjectShortNameLessThanOrEqualTo(String value) {
            addCriterion("PROJECT_SHORT_NAME <=", value, "projectShortName");
            return (Criteria) this;
        }

        public Criteria andProjectShortNameLike(String value) {
            addCriterion("PROJECT_SHORT_NAME like", value, "projectShortName");
            return (Criteria) this;
        }

        public Criteria andProjectShortNameNotLike(String value) {
            addCriterion("PROJECT_SHORT_NAME not like", value, "projectShortName");
            return (Criteria) this;
        }

        public Criteria andProjectShortNameIn(List<String> values) {
            addCriterion("PROJECT_SHORT_NAME in", values, "projectShortName");
            return (Criteria) this;
        }

        public Criteria andProjectShortNameNotIn(List<String> values) {
            addCriterion("PROJECT_SHORT_NAME not in", values, "projectShortName");
            return (Criteria) this;
        }

        public Criteria andProjectShortNameBetween(String value1, String value2) {
            addCriterion("PROJECT_SHORT_NAME between", value1, value2, "projectShortName");
            return (Criteria) this;
        }

        public Criteria andProjectShortNameNotBetween(String value1, String value2) {
            addCriterion("PROJECT_SHORT_NAME not between", value1, value2, "projectShortName");
            return (Criteria) this;
        }

        public Criteria andProjectStateIsNull() {
            addCriterion("PROJECT_STATE is null");
            return (Criteria) this;
        }

        public Criteria andProjectStateIsNotNull() {
            addCriterion("PROJECT_STATE is not null");
            return (Criteria) this;
        }

        public Criteria andProjectStateEqualTo(Integer value) {
            addCriterion("PROJECT_STATE =", value, "projectState");
            return (Criteria) this;
        }

        public Criteria andProjectStateNotEqualTo(Integer value) {
            addCriterion("PROJECT_STATE <>", value, "projectState");
            return (Criteria) this;
        }

        public Criteria andProjectStateGreaterThan(Integer value) {
            addCriterion("PROJECT_STATE >", value, "projectState");
            return (Criteria) this;
        }

        public Criteria andProjectStateGreaterThanOrEqualTo(Integer value) {
            addCriterion("PROJECT_STATE >=", value, "projectState");
            return (Criteria) this;
        }

        public Criteria andProjectStateLessThan(Integer value) {
            addCriterion("PROJECT_STATE <", value, "projectState");
            return (Criteria) this;
        }

        public Criteria andProjectStateLessThanOrEqualTo(Integer value) {
            addCriterion("PROJECT_STATE <=", value, "projectState");
            return (Criteria) this;
        }

        public Criteria andProjectStateIn(List<Integer> values) {
            addCriterion("PROJECT_STATE in", values, "projectState");
            return (Criteria) this;
        }

        public Criteria andProjectStateNotIn(List<Integer> values) {
            addCriterion("PROJECT_STATE not in", values, "projectState");
            return (Criteria) this;
        }

        public Criteria andProjectStateBetween(Integer value1, Integer value2) {
            addCriterion("PROJECT_STATE between", value1, value2, "projectState");
            return (Criteria) this;
        }

        public Criteria andProjectStateNotBetween(Integer value1, Integer value2) {
            addCriterion("PROJECT_STATE not between", value1, value2, "projectState");
            return (Criteria) this;
        }

        public Criteria andProjectManagerIdIsNull() {
            addCriterion("PROJECT_MANAGER_ID is null");
            return (Criteria) this;
        }

        public Criteria andProjectManagerIdIsNotNull() {
            addCriterion("PROJECT_MANAGER_ID is not null");
            return (Criteria) this;
        }

        public Criteria andProjectManagerIdEqualTo(Integer value) {
            addCriterion("PROJECT_MANAGER_ID =", value, "projectManagerId");
            return (Criteria) this;
        }

        public Criteria andProjectManagerIdNotEqualTo(Integer value) {
            addCriterion("PROJECT_MANAGER_ID <>", value, "projectManagerId");
            return (Criteria) this;
        }

        public Criteria andProjectManagerIdGreaterThan(Integer value) {
            addCriterion("PROJECT_MANAGER_ID >", value, "projectManagerId");
            return (Criteria) this;
        }

        public Criteria andProjectManagerIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("PROJECT_MANAGER_ID >=", value, "projectManagerId");
            return (Criteria) this;
        }

        public Criteria andProjectManagerIdLessThan(Integer value) {
            addCriterion("PROJECT_MANAGER_ID <", value, "projectManagerId");
            return (Criteria) this;
        }

        public Criteria andProjectManagerIdLessThanOrEqualTo(Integer value) {
            addCriterion("PROJECT_MANAGER_ID <=", value, "projectManagerId");
            return (Criteria) this;
        }

        public Criteria andProjectManagerIdIn(List<Integer> values) {
            addCriterion("PROJECT_MANAGER_ID in", values, "projectManagerId");
            return (Criteria) this;
        }

        public Criteria andProjectManagerIdNotIn(List<Integer> values) {
            addCriterion("PROJECT_MANAGER_ID not in", values, "projectManagerId");
            return (Criteria) this;
        }

        public Criteria andProjectManagerIdBetween(Integer value1, Integer value2) {
            addCriterion("PROJECT_MANAGER_ID between", value1, value2, "projectManagerId");
            return (Criteria) this;
        }

        public Criteria andProjectManagerIdNotBetween(Integer value1, Integer value2) {
            addCriterion("PROJECT_MANAGER_ID not between", value1, value2, "projectManagerId");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table t_project
     *
     * @mbggenerated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table t_project
     *
     * @mbggenerated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}