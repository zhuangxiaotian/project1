package cn.topdeep.projgroup.entity.jiradb;

import common.entity.Page;
import java.util.ArrayList;
import java.util.List;

public class CustomfieldExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table customfield
     *
     * @mbggenerated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table customfield
     *
     * @mbggenerated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table customfield
     *
     * @mbggenerated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table customfield
     *
     * @mbggenerated
     */
    protected Page page;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table customfield
     *
     * @mbggenerated
     */
    public CustomfieldExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table customfield
     *
     * @mbggenerated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table customfield
     *
     * @mbggenerated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table customfield
     *
     * @mbggenerated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table customfield
     *
     * @mbggenerated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table customfield
     *
     * @mbggenerated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table customfield
     *
     * @mbggenerated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table customfield
     *
     * @mbggenerated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table customfield
     *
     * @mbggenerated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table customfield
     *
     * @mbggenerated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table customfield
     *
     * @mbggenerated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table customfield
     *
     * @mbggenerated
     */
    public void setPage(Page page) {
        this.page=page;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table customfield
     *
     * @mbggenerated
     */
    public Page getPage() {
        return page;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table customfield
     *
     * @mbggenerated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("ID is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("ID is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Long value) {
            addCriterion("ID =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Long value) {
            addCriterion("ID <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Long value) {
            addCriterion("ID >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Long value) {
            addCriterion("ID >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Long value) {
            addCriterion("ID <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Long value) {
            addCriterion("ID <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Long> values) {
            addCriterion("ID in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Long> values) {
            addCriterion("ID not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Long value1, Long value2) {
            addCriterion("ID between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Long value1, Long value2) {
            addCriterion("ID not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andCustomfieldtypekeyIsNull() {
            addCriterion("CUSTOMFIELDTYPEKEY is null");
            return (Criteria) this;
        }

        public Criteria andCustomfieldtypekeyIsNotNull() {
            addCriterion("CUSTOMFIELDTYPEKEY is not null");
            return (Criteria) this;
        }

        public Criteria andCustomfieldtypekeyEqualTo(String value) {
            addCriterion("CUSTOMFIELDTYPEKEY =", value, "customfieldtypekey");
            return (Criteria) this;
        }

        public Criteria andCustomfieldtypekeyNotEqualTo(String value) {
            addCriterion("CUSTOMFIELDTYPEKEY <>", value, "customfieldtypekey");
            return (Criteria) this;
        }

        public Criteria andCustomfieldtypekeyGreaterThan(String value) {
            addCriterion("CUSTOMFIELDTYPEKEY >", value, "customfieldtypekey");
            return (Criteria) this;
        }

        public Criteria andCustomfieldtypekeyGreaterThanOrEqualTo(String value) {
            addCriterion("CUSTOMFIELDTYPEKEY >=", value, "customfieldtypekey");
            return (Criteria) this;
        }

        public Criteria andCustomfieldtypekeyLessThan(String value) {
            addCriterion("CUSTOMFIELDTYPEKEY <", value, "customfieldtypekey");
            return (Criteria) this;
        }

        public Criteria andCustomfieldtypekeyLessThanOrEqualTo(String value) {
            addCriterion("CUSTOMFIELDTYPEKEY <=", value, "customfieldtypekey");
            return (Criteria) this;
        }

        public Criteria andCustomfieldtypekeyLike(String value) {
            addCriterion("CUSTOMFIELDTYPEKEY like", value, "customfieldtypekey");
            return (Criteria) this;
        }

        public Criteria andCustomfieldtypekeyNotLike(String value) {
            addCriterion("CUSTOMFIELDTYPEKEY not like", value, "customfieldtypekey");
            return (Criteria) this;
        }

        public Criteria andCustomfieldtypekeyIn(List<String> values) {
            addCriterion("CUSTOMFIELDTYPEKEY in", values, "customfieldtypekey");
            return (Criteria) this;
        }

        public Criteria andCustomfieldtypekeyNotIn(List<String> values) {
            addCriterion("CUSTOMFIELDTYPEKEY not in", values, "customfieldtypekey");
            return (Criteria) this;
        }

        public Criteria andCustomfieldtypekeyBetween(String value1, String value2) {
            addCriterion("CUSTOMFIELDTYPEKEY between", value1, value2, "customfieldtypekey");
            return (Criteria) this;
        }

        public Criteria andCustomfieldtypekeyNotBetween(String value1, String value2) {
            addCriterion("CUSTOMFIELDTYPEKEY not between", value1, value2, "customfieldtypekey");
            return (Criteria) this;
        }

        public Criteria andCustomfieldsearcherkeyIsNull() {
            addCriterion("CUSTOMFIELDSEARCHERKEY is null");
            return (Criteria) this;
        }

        public Criteria andCustomfieldsearcherkeyIsNotNull() {
            addCriterion("CUSTOMFIELDSEARCHERKEY is not null");
            return (Criteria) this;
        }

        public Criteria andCustomfieldsearcherkeyEqualTo(String value) {
            addCriterion("CUSTOMFIELDSEARCHERKEY =", value, "customfieldsearcherkey");
            return (Criteria) this;
        }

        public Criteria andCustomfieldsearcherkeyNotEqualTo(String value) {
            addCriterion("CUSTOMFIELDSEARCHERKEY <>", value, "customfieldsearcherkey");
            return (Criteria) this;
        }

        public Criteria andCustomfieldsearcherkeyGreaterThan(String value) {
            addCriterion("CUSTOMFIELDSEARCHERKEY >", value, "customfieldsearcherkey");
            return (Criteria) this;
        }

        public Criteria andCustomfieldsearcherkeyGreaterThanOrEqualTo(String value) {
            addCriterion("CUSTOMFIELDSEARCHERKEY >=", value, "customfieldsearcherkey");
            return (Criteria) this;
        }

        public Criteria andCustomfieldsearcherkeyLessThan(String value) {
            addCriterion("CUSTOMFIELDSEARCHERKEY <", value, "customfieldsearcherkey");
            return (Criteria) this;
        }

        public Criteria andCustomfieldsearcherkeyLessThanOrEqualTo(String value) {
            addCriterion("CUSTOMFIELDSEARCHERKEY <=", value, "customfieldsearcherkey");
            return (Criteria) this;
        }

        public Criteria andCustomfieldsearcherkeyLike(String value) {
            addCriterion("CUSTOMFIELDSEARCHERKEY like", value, "customfieldsearcherkey");
            return (Criteria) this;
        }

        public Criteria andCustomfieldsearcherkeyNotLike(String value) {
            addCriterion("CUSTOMFIELDSEARCHERKEY not like", value, "customfieldsearcherkey");
            return (Criteria) this;
        }

        public Criteria andCustomfieldsearcherkeyIn(List<String> values) {
            addCriterion("CUSTOMFIELDSEARCHERKEY in", values, "customfieldsearcherkey");
            return (Criteria) this;
        }

        public Criteria andCustomfieldsearcherkeyNotIn(List<String> values) {
            addCriterion("CUSTOMFIELDSEARCHERKEY not in", values, "customfieldsearcherkey");
            return (Criteria) this;
        }

        public Criteria andCustomfieldsearcherkeyBetween(String value1, String value2) {
            addCriterion("CUSTOMFIELDSEARCHERKEY between", value1, value2, "customfieldsearcherkey");
            return (Criteria) this;
        }

        public Criteria andCustomfieldsearcherkeyNotBetween(String value1, String value2) {
            addCriterion("CUSTOMFIELDSEARCHERKEY not between", value1, value2, "customfieldsearcherkey");
            return (Criteria) this;
        }

        public Criteria andCfnameIsNull() {
            addCriterion("cfname is null");
            return (Criteria) this;
        }

        public Criteria andCfnameIsNotNull() {
            addCriterion("cfname is not null");
            return (Criteria) this;
        }

        public Criteria andCfnameEqualTo(String value) {
            addCriterion("cfname =", value, "cfname");
            return (Criteria) this;
        }

        public Criteria andCfnameNotEqualTo(String value) {
            addCriterion("cfname <>", value, "cfname");
            return (Criteria) this;
        }

        public Criteria andCfnameGreaterThan(String value) {
            addCriterion("cfname >", value, "cfname");
            return (Criteria) this;
        }

        public Criteria andCfnameGreaterThanOrEqualTo(String value) {
            addCriterion("cfname >=", value, "cfname");
            return (Criteria) this;
        }

        public Criteria andCfnameLessThan(String value) {
            addCriterion("cfname <", value, "cfname");
            return (Criteria) this;
        }

        public Criteria andCfnameLessThanOrEqualTo(String value) {
            addCriterion("cfname <=", value, "cfname");
            return (Criteria) this;
        }

        public Criteria andCfnameLike(String value) {
            addCriterion("cfname like", value, "cfname");
            return (Criteria) this;
        }

        public Criteria andCfnameNotLike(String value) {
            addCriterion("cfname not like", value, "cfname");
            return (Criteria) this;
        }

        public Criteria andCfnameIn(List<String> values) {
            addCriterion("cfname in", values, "cfname");
            return (Criteria) this;
        }

        public Criteria andCfnameNotIn(List<String> values) {
            addCriterion("cfname not in", values, "cfname");
            return (Criteria) this;
        }

        public Criteria andCfnameBetween(String value1, String value2) {
            addCriterion("cfname between", value1, value2, "cfname");
            return (Criteria) this;
        }

        public Criteria andCfnameNotBetween(String value1, String value2) {
            addCriterion("cfname not between", value1, value2, "cfname");
            return (Criteria) this;
        }

        public Criteria andDefaultvalueIsNull() {
            addCriterion("defaultvalue is null");
            return (Criteria) this;
        }

        public Criteria andDefaultvalueIsNotNull() {
            addCriterion("defaultvalue is not null");
            return (Criteria) this;
        }

        public Criteria andDefaultvalueEqualTo(String value) {
            addCriterion("defaultvalue =", value, "defaultvalue");
            return (Criteria) this;
        }

        public Criteria andDefaultvalueNotEqualTo(String value) {
            addCriterion("defaultvalue <>", value, "defaultvalue");
            return (Criteria) this;
        }

        public Criteria andDefaultvalueGreaterThan(String value) {
            addCriterion("defaultvalue >", value, "defaultvalue");
            return (Criteria) this;
        }

        public Criteria andDefaultvalueGreaterThanOrEqualTo(String value) {
            addCriterion("defaultvalue >=", value, "defaultvalue");
            return (Criteria) this;
        }

        public Criteria andDefaultvalueLessThan(String value) {
            addCriterion("defaultvalue <", value, "defaultvalue");
            return (Criteria) this;
        }

        public Criteria andDefaultvalueLessThanOrEqualTo(String value) {
            addCriterion("defaultvalue <=", value, "defaultvalue");
            return (Criteria) this;
        }

        public Criteria andDefaultvalueLike(String value) {
            addCriterion("defaultvalue like", value, "defaultvalue");
            return (Criteria) this;
        }

        public Criteria andDefaultvalueNotLike(String value) {
            addCriterion("defaultvalue not like", value, "defaultvalue");
            return (Criteria) this;
        }

        public Criteria andDefaultvalueIn(List<String> values) {
            addCriterion("defaultvalue in", values, "defaultvalue");
            return (Criteria) this;
        }

        public Criteria andDefaultvalueNotIn(List<String> values) {
            addCriterion("defaultvalue not in", values, "defaultvalue");
            return (Criteria) this;
        }

        public Criteria andDefaultvalueBetween(String value1, String value2) {
            addCriterion("defaultvalue between", value1, value2, "defaultvalue");
            return (Criteria) this;
        }

        public Criteria andDefaultvalueNotBetween(String value1, String value2) {
            addCriterion("defaultvalue not between", value1, value2, "defaultvalue");
            return (Criteria) this;
        }

        public Criteria andFieldtypeIsNull() {
            addCriterion("FIELDTYPE is null");
            return (Criteria) this;
        }

        public Criteria andFieldtypeIsNotNull() {
            addCriterion("FIELDTYPE is not null");
            return (Criteria) this;
        }

        public Criteria andFieldtypeEqualTo(Long value) {
            addCriterion("FIELDTYPE =", value, "fieldtype");
            return (Criteria) this;
        }

        public Criteria andFieldtypeNotEqualTo(Long value) {
            addCriterion("FIELDTYPE <>", value, "fieldtype");
            return (Criteria) this;
        }

        public Criteria andFieldtypeGreaterThan(Long value) {
            addCriterion("FIELDTYPE >", value, "fieldtype");
            return (Criteria) this;
        }

        public Criteria andFieldtypeGreaterThanOrEqualTo(Long value) {
            addCriterion("FIELDTYPE >=", value, "fieldtype");
            return (Criteria) this;
        }

        public Criteria andFieldtypeLessThan(Long value) {
            addCriterion("FIELDTYPE <", value, "fieldtype");
            return (Criteria) this;
        }

        public Criteria andFieldtypeLessThanOrEqualTo(Long value) {
            addCriterion("FIELDTYPE <=", value, "fieldtype");
            return (Criteria) this;
        }

        public Criteria andFieldtypeIn(List<Long> values) {
            addCriterion("FIELDTYPE in", values, "fieldtype");
            return (Criteria) this;
        }

        public Criteria andFieldtypeNotIn(List<Long> values) {
            addCriterion("FIELDTYPE not in", values, "fieldtype");
            return (Criteria) this;
        }

        public Criteria andFieldtypeBetween(Long value1, Long value2) {
            addCriterion("FIELDTYPE between", value1, value2, "fieldtype");
            return (Criteria) this;
        }

        public Criteria andFieldtypeNotBetween(Long value1, Long value2) {
            addCriterion("FIELDTYPE not between", value1, value2, "fieldtype");
            return (Criteria) this;
        }

        public Criteria andProjectIsNull() {
            addCriterion("PROJECT is null");
            return (Criteria) this;
        }

        public Criteria andProjectIsNotNull() {
            addCriterion("PROJECT is not null");
            return (Criteria) this;
        }

        public Criteria andProjectEqualTo(Long value) {
            addCriterion("PROJECT =", value, "project");
            return (Criteria) this;
        }

        public Criteria andProjectNotEqualTo(Long value) {
            addCriterion("PROJECT <>", value, "project");
            return (Criteria) this;
        }

        public Criteria andProjectGreaterThan(Long value) {
            addCriterion("PROJECT >", value, "project");
            return (Criteria) this;
        }

        public Criteria andProjectGreaterThanOrEqualTo(Long value) {
            addCriterion("PROJECT >=", value, "project");
            return (Criteria) this;
        }

        public Criteria andProjectLessThan(Long value) {
            addCriterion("PROJECT <", value, "project");
            return (Criteria) this;
        }

        public Criteria andProjectLessThanOrEqualTo(Long value) {
            addCriterion("PROJECT <=", value, "project");
            return (Criteria) this;
        }

        public Criteria andProjectIn(List<Long> values) {
            addCriterion("PROJECT in", values, "project");
            return (Criteria) this;
        }

        public Criteria andProjectNotIn(List<Long> values) {
            addCriterion("PROJECT not in", values, "project");
            return (Criteria) this;
        }

        public Criteria andProjectBetween(Long value1, Long value2) {
            addCriterion("PROJECT between", value1, value2, "project");
            return (Criteria) this;
        }

        public Criteria andProjectNotBetween(Long value1, Long value2) {
            addCriterion("PROJECT not between", value1, value2, "project");
            return (Criteria) this;
        }

        public Criteria andIssuetypeIsNull() {
            addCriterion("ISSUETYPE is null");
            return (Criteria) this;
        }

        public Criteria andIssuetypeIsNotNull() {
            addCriterion("ISSUETYPE is not null");
            return (Criteria) this;
        }

        public Criteria andIssuetypeEqualTo(String value) {
            addCriterion("ISSUETYPE =", value, "issuetype");
            return (Criteria) this;
        }

        public Criteria andIssuetypeNotEqualTo(String value) {
            addCriterion("ISSUETYPE <>", value, "issuetype");
            return (Criteria) this;
        }

        public Criteria andIssuetypeGreaterThan(String value) {
            addCriterion("ISSUETYPE >", value, "issuetype");
            return (Criteria) this;
        }

        public Criteria andIssuetypeGreaterThanOrEqualTo(String value) {
            addCriterion("ISSUETYPE >=", value, "issuetype");
            return (Criteria) this;
        }

        public Criteria andIssuetypeLessThan(String value) {
            addCriterion("ISSUETYPE <", value, "issuetype");
            return (Criteria) this;
        }

        public Criteria andIssuetypeLessThanOrEqualTo(String value) {
            addCriterion("ISSUETYPE <=", value, "issuetype");
            return (Criteria) this;
        }

        public Criteria andIssuetypeLike(String value) {
            addCriterion("ISSUETYPE like", value, "issuetype");
            return (Criteria) this;
        }

        public Criteria andIssuetypeNotLike(String value) {
            addCriterion("ISSUETYPE not like", value, "issuetype");
            return (Criteria) this;
        }

        public Criteria andIssuetypeIn(List<String> values) {
            addCriterion("ISSUETYPE in", values, "issuetype");
            return (Criteria) this;
        }

        public Criteria andIssuetypeNotIn(List<String> values) {
            addCriterion("ISSUETYPE not in", values, "issuetype");
            return (Criteria) this;
        }

        public Criteria andIssuetypeBetween(String value1, String value2) {
            addCriterion("ISSUETYPE between", value1, value2, "issuetype");
            return (Criteria) this;
        }

        public Criteria andIssuetypeNotBetween(String value1, String value2) {
            addCriterion("ISSUETYPE not between", value1, value2, "issuetype");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table customfield
     *
     * @mbggenerated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table customfield
     *
     * @mbggenerated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}