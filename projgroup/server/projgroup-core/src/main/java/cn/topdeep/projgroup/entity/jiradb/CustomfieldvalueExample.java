package cn.topdeep.projgroup.entity.jiradb;

import common.entity.Page;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class CustomfieldvalueExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table customfieldvalue
     *
     * @mbggenerated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table customfieldvalue
     *
     * @mbggenerated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table customfieldvalue
     *
     * @mbggenerated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table customfieldvalue
     *
     * @mbggenerated
     */
    protected Page page;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table customfieldvalue
     *
     * @mbggenerated
     */
    public CustomfieldvalueExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table customfieldvalue
     *
     * @mbggenerated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table customfieldvalue
     *
     * @mbggenerated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table customfieldvalue
     *
     * @mbggenerated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table customfieldvalue
     *
     * @mbggenerated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table customfieldvalue
     *
     * @mbggenerated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table customfieldvalue
     *
     * @mbggenerated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table customfieldvalue
     *
     * @mbggenerated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table customfieldvalue
     *
     * @mbggenerated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table customfieldvalue
     *
     * @mbggenerated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table customfieldvalue
     *
     * @mbggenerated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table customfieldvalue
     *
     * @mbggenerated
     */
    public void setPage(Page page) {
        this.page=page;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table customfieldvalue
     *
     * @mbggenerated
     */
    public Page getPage() {
        return page;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table customfieldvalue
     *
     * @mbggenerated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("ID is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("ID is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Long value) {
            addCriterion("ID =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Long value) {
            addCriterion("ID <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Long value) {
            addCriterion("ID >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Long value) {
            addCriterion("ID >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Long value) {
            addCriterion("ID <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Long value) {
            addCriterion("ID <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Long> values) {
            addCriterion("ID in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Long> values) {
            addCriterion("ID not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Long value1, Long value2) {
            addCriterion("ID between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Long value1, Long value2) {
            addCriterion("ID not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIssueIsNull() {
            addCriterion("ISSUE is null");
            return (Criteria) this;
        }

        public Criteria andIssueIsNotNull() {
            addCriterion("ISSUE is not null");
            return (Criteria) this;
        }

        public Criteria andIssueEqualTo(Long value) {
            addCriterion("ISSUE =", value, "issue");
            return (Criteria) this;
        }

        public Criteria andIssueNotEqualTo(Long value) {
            addCriterion("ISSUE <>", value, "issue");
            return (Criteria) this;
        }

        public Criteria andIssueGreaterThan(Long value) {
            addCriterion("ISSUE >", value, "issue");
            return (Criteria) this;
        }

        public Criteria andIssueGreaterThanOrEqualTo(Long value) {
            addCriterion("ISSUE >=", value, "issue");
            return (Criteria) this;
        }

        public Criteria andIssueLessThan(Long value) {
            addCriterion("ISSUE <", value, "issue");
            return (Criteria) this;
        }

        public Criteria andIssueLessThanOrEqualTo(Long value) {
            addCriterion("ISSUE <=", value, "issue");
            return (Criteria) this;
        }

        public Criteria andIssueIn(List<Long> values) {
            addCriterion("ISSUE in", values, "issue");
            return (Criteria) this;
        }

        public Criteria andIssueNotIn(List<Long> values) {
            addCriterion("ISSUE not in", values, "issue");
            return (Criteria) this;
        }

        public Criteria andIssueBetween(Long value1, Long value2) {
            addCriterion("ISSUE between", value1, value2, "issue");
            return (Criteria) this;
        }

        public Criteria andIssueNotBetween(Long value1, Long value2) {
            addCriterion("ISSUE not between", value1, value2, "issue");
            return (Criteria) this;
        }

        public Criteria andCustomfieldIsNull() {
            addCriterion("CUSTOMFIELD is null");
            return (Criteria) this;
        }

        public Criteria andCustomfieldIsNotNull() {
            addCriterion("CUSTOMFIELD is not null");
            return (Criteria) this;
        }

        public Criteria andCustomfieldEqualTo(Long value) {
            addCriterion("CUSTOMFIELD =", value, "customfield");
            return (Criteria) this;
        }

        public Criteria andCustomfieldNotEqualTo(Long value) {
            addCriterion("CUSTOMFIELD <>", value, "customfield");
            return (Criteria) this;
        }

        public Criteria andCustomfieldGreaterThan(Long value) {
            addCriterion("CUSTOMFIELD >", value, "customfield");
            return (Criteria) this;
        }

        public Criteria andCustomfieldGreaterThanOrEqualTo(Long value) {
            addCriterion("CUSTOMFIELD >=", value, "customfield");
            return (Criteria) this;
        }

        public Criteria andCustomfieldLessThan(Long value) {
            addCriterion("CUSTOMFIELD <", value, "customfield");
            return (Criteria) this;
        }

        public Criteria andCustomfieldLessThanOrEqualTo(Long value) {
            addCriterion("CUSTOMFIELD <=", value, "customfield");
            return (Criteria) this;
        }

        public Criteria andCustomfieldIn(List<Long> values) {
            addCriterion("CUSTOMFIELD in", values, "customfield");
            return (Criteria) this;
        }

        public Criteria andCustomfieldNotIn(List<Long> values) {
            addCriterion("CUSTOMFIELD not in", values, "customfield");
            return (Criteria) this;
        }

        public Criteria andCustomfieldBetween(Long value1, Long value2) {
            addCriterion("CUSTOMFIELD between", value1, value2, "customfield");
            return (Criteria) this;
        }

        public Criteria andCustomfieldNotBetween(Long value1, Long value2) {
            addCriterion("CUSTOMFIELD not between", value1, value2, "customfield");
            return (Criteria) this;
        }

        public Criteria andParentkeyIsNull() {
            addCriterion("PARENTKEY is null");
            return (Criteria) this;
        }

        public Criteria andParentkeyIsNotNull() {
            addCriterion("PARENTKEY is not null");
            return (Criteria) this;
        }

        public Criteria andParentkeyEqualTo(String value) {
            addCriterion("PARENTKEY =", value, "parentkey");
            return (Criteria) this;
        }

        public Criteria andParentkeyNotEqualTo(String value) {
            addCriterion("PARENTKEY <>", value, "parentkey");
            return (Criteria) this;
        }

        public Criteria andParentkeyGreaterThan(String value) {
            addCriterion("PARENTKEY >", value, "parentkey");
            return (Criteria) this;
        }

        public Criteria andParentkeyGreaterThanOrEqualTo(String value) {
            addCriterion("PARENTKEY >=", value, "parentkey");
            return (Criteria) this;
        }

        public Criteria andParentkeyLessThan(String value) {
            addCriterion("PARENTKEY <", value, "parentkey");
            return (Criteria) this;
        }

        public Criteria andParentkeyLessThanOrEqualTo(String value) {
            addCriterion("PARENTKEY <=", value, "parentkey");
            return (Criteria) this;
        }

        public Criteria andParentkeyLike(String value) {
            addCriterion("PARENTKEY like", value, "parentkey");
            return (Criteria) this;
        }

        public Criteria andParentkeyNotLike(String value) {
            addCriterion("PARENTKEY not like", value, "parentkey");
            return (Criteria) this;
        }

        public Criteria andParentkeyIn(List<String> values) {
            addCriterion("PARENTKEY in", values, "parentkey");
            return (Criteria) this;
        }

        public Criteria andParentkeyNotIn(List<String> values) {
            addCriterion("PARENTKEY not in", values, "parentkey");
            return (Criteria) this;
        }

        public Criteria andParentkeyBetween(String value1, String value2) {
            addCriterion("PARENTKEY between", value1, value2, "parentkey");
            return (Criteria) this;
        }

        public Criteria andParentkeyNotBetween(String value1, String value2) {
            addCriterion("PARENTKEY not between", value1, value2, "parentkey");
            return (Criteria) this;
        }

        public Criteria andStringvalueIsNull() {
            addCriterion("STRINGVALUE is null");
            return (Criteria) this;
        }

        public Criteria andStringvalueIsNotNull() {
            addCriterion("STRINGVALUE is not null");
            return (Criteria) this;
        }

        public Criteria andStringvalueEqualTo(String value) {
            addCriterion("STRINGVALUE =", value, "stringvalue");
            return (Criteria) this;
        }

        public Criteria andStringvalueNotEqualTo(String value) {
            addCriterion("STRINGVALUE <>", value, "stringvalue");
            return (Criteria) this;
        }

        public Criteria andStringvalueGreaterThan(String value) {
            addCriterion("STRINGVALUE >", value, "stringvalue");
            return (Criteria) this;
        }

        public Criteria andStringvalueGreaterThanOrEqualTo(String value) {
            addCriterion("STRINGVALUE >=", value, "stringvalue");
            return (Criteria) this;
        }

        public Criteria andStringvalueLessThan(String value) {
            addCriterion("STRINGVALUE <", value, "stringvalue");
            return (Criteria) this;
        }

        public Criteria andStringvalueLessThanOrEqualTo(String value) {
            addCriterion("STRINGVALUE <=", value, "stringvalue");
            return (Criteria) this;
        }

        public Criteria andStringvalueLike(String value) {
            addCriterion("STRINGVALUE like", value, "stringvalue");
            return (Criteria) this;
        }

        public Criteria andStringvalueNotLike(String value) {
            addCriterion("STRINGVALUE not like", value, "stringvalue");
            return (Criteria) this;
        }

        public Criteria andStringvalueIn(List<String> values) {
            addCriterion("STRINGVALUE in", values, "stringvalue");
            return (Criteria) this;
        }

        public Criteria andStringvalueNotIn(List<String> values) {
            addCriterion("STRINGVALUE not in", values, "stringvalue");
            return (Criteria) this;
        }

        public Criteria andStringvalueBetween(String value1, String value2) {
            addCriterion("STRINGVALUE between", value1, value2, "stringvalue");
            return (Criteria) this;
        }

        public Criteria andStringvalueNotBetween(String value1, String value2) {
            addCriterion("STRINGVALUE not between", value1, value2, "stringvalue");
            return (Criteria) this;
        }

        public Criteria andNumbervalueIsNull() {
            addCriterion("NUMBERVALUE is null");
            return (Criteria) this;
        }

        public Criteria andNumbervalueIsNotNull() {
            addCriterion("NUMBERVALUE is not null");
            return (Criteria) this;
        }

        public Criteria andNumbervalueEqualTo(Double value) {
            addCriterion("NUMBERVALUE =", value, "numbervalue");
            return (Criteria) this;
        }

        public Criteria andNumbervalueNotEqualTo(Double value) {
            addCriterion("NUMBERVALUE <>", value, "numbervalue");
            return (Criteria) this;
        }

        public Criteria andNumbervalueGreaterThan(Double value) {
            addCriterion("NUMBERVALUE >", value, "numbervalue");
            return (Criteria) this;
        }

        public Criteria andNumbervalueGreaterThanOrEqualTo(Double value) {
            addCriterion("NUMBERVALUE >=", value, "numbervalue");
            return (Criteria) this;
        }

        public Criteria andNumbervalueLessThan(Double value) {
            addCriterion("NUMBERVALUE <", value, "numbervalue");
            return (Criteria) this;
        }

        public Criteria andNumbervalueLessThanOrEqualTo(Double value) {
            addCriterion("NUMBERVALUE <=", value, "numbervalue");
            return (Criteria) this;
        }

        public Criteria andNumbervalueIn(List<Double> values) {
            addCriterion("NUMBERVALUE in", values, "numbervalue");
            return (Criteria) this;
        }

        public Criteria andNumbervalueNotIn(List<Double> values) {
            addCriterion("NUMBERVALUE not in", values, "numbervalue");
            return (Criteria) this;
        }

        public Criteria andNumbervalueBetween(Double value1, Double value2) {
            addCriterion("NUMBERVALUE between", value1, value2, "numbervalue");
            return (Criteria) this;
        }

        public Criteria andNumbervalueNotBetween(Double value1, Double value2) {
            addCriterion("NUMBERVALUE not between", value1, value2, "numbervalue");
            return (Criteria) this;
        }

        public Criteria andDatevalueIsNull() {
            addCriterion("DATEVALUE is null");
            return (Criteria) this;
        }

        public Criteria andDatevalueIsNotNull() {
            addCriterion("DATEVALUE is not null");
            return (Criteria) this;
        }

        public Criteria andDatevalueEqualTo(Date value) {
            addCriterion("DATEVALUE =", value, "datevalue");
            return (Criteria) this;
        }

        public Criteria andDatevalueNotEqualTo(Date value) {
            addCriterion("DATEVALUE <>", value, "datevalue");
            return (Criteria) this;
        }

        public Criteria andDatevalueGreaterThan(Date value) {
            addCriterion("DATEVALUE >", value, "datevalue");
            return (Criteria) this;
        }

        public Criteria andDatevalueGreaterThanOrEqualTo(Date value) {
            addCriterion("DATEVALUE >=", value, "datevalue");
            return (Criteria) this;
        }

        public Criteria andDatevalueLessThan(Date value) {
            addCriterion("DATEVALUE <", value, "datevalue");
            return (Criteria) this;
        }

        public Criteria andDatevalueLessThanOrEqualTo(Date value) {
            addCriterion("DATEVALUE <=", value, "datevalue");
            return (Criteria) this;
        }

        public Criteria andDatevalueIn(List<Date> values) {
            addCriterion("DATEVALUE in", values, "datevalue");
            return (Criteria) this;
        }

        public Criteria andDatevalueNotIn(List<Date> values) {
            addCriterion("DATEVALUE not in", values, "datevalue");
            return (Criteria) this;
        }

        public Criteria andDatevalueBetween(Date value1, Date value2) {
            addCriterion("DATEVALUE between", value1, value2, "datevalue");
            return (Criteria) this;
        }

        public Criteria andDatevalueNotBetween(Date value1, Date value2) {
            addCriterion("DATEVALUE not between", value1, value2, "datevalue");
            return (Criteria) this;
        }

        public Criteria andValuetypeIsNull() {
            addCriterion("VALUETYPE is null");
            return (Criteria) this;
        }

        public Criteria andValuetypeIsNotNull() {
            addCriterion("VALUETYPE is not null");
            return (Criteria) this;
        }

        public Criteria andValuetypeEqualTo(String value) {
            addCriterion("VALUETYPE =", value, "valuetype");
            return (Criteria) this;
        }

        public Criteria andValuetypeNotEqualTo(String value) {
            addCriterion("VALUETYPE <>", value, "valuetype");
            return (Criteria) this;
        }

        public Criteria andValuetypeGreaterThan(String value) {
            addCriterion("VALUETYPE >", value, "valuetype");
            return (Criteria) this;
        }

        public Criteria andValuetypeGreaterThanOrEqualTo(String value) {
            addCriterion("VALUETYPE >=", value, "valuetype");
            return (Criteria) this;
        }

        public Criteria andValuetypeLessThan(String value) {
            addCriterion("VALUETYPE <", value, "valuetype");
            return (Criteria) this;
        }

        public Criteria andValuetypeLessThanOrEqualTo(String value) {
            addCriterion("VALUETYPE <=", value, "valuetype");
            return (Criteria) this;
        }

        public Criteria andValuetypeLike(String value) {
            addCriterion("VALUETYPE like", value, "valuetype");
            return (Criteria) this;
        }

        public Criteria andValuetypeNotLike(String value) {
            addCriterion("VALUETYPE not like", value, "valuetype");
            return (Criteria) this;
        }

        public Criteria andValuetypeIn(List<String> values) {
            addCriterion("VALUETYPE in", values, "valuetype");
            return (Criteria) this;
        }

        public Criteria andValuetypeNotIn(List<String> values) {
            addCriterion("VALUETYPE not in", values, "valuetype");
            return (Criteria) this;
        }

        public Criteria andValuetypeBetween(String value1, String value2) {
            addCriterion("VALUETYPE between", value1, value2, "valuetype");
            return (Criteria) this;
        }

        public Criteria andValuetypeNotBetween(String value1, String value2) {
            addCriterion("VALUETYPE not between", value1, value2, "valuetype");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table customfieldvalue
     *
     * @mbggenerated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table customfieldvalue
     *
     * @mbggenerated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}