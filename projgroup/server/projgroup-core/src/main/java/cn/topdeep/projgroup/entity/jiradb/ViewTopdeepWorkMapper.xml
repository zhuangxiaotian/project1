<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.topdeep.projgroup.entity.jiradb.ViewTopdeepWorkMapper">
  <resultMap id="BaseResultMap" type="cn.topdeep.projgroup.entity.jiradb.ViewTopdeepWork">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <constructor>
      <arg column="ID" javaType="java.lang.Long" jdbcType="DECIMAL" />
      <arg column="pkey" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="PROJECT" javaType="java.lang.Long" jdbcType="DECIMAL" />
      <arg column="REPORTER" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="ASSIGNEE" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="issuetype" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="SUMMARY" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="PRIORITY" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="RESOLUTION" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="issuestatus" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="CREATED" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="UPDATED" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="DUEDATE" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="RESOLUTIONDATE" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="VOTES" javaType="java.lang.Long" jdbcType="DECIMAL" />
      <arg column="WATCHES" javaType="java.lang.Long" jdbcType="DECIMAL" />
      <arg column="TIMEORIGINALESTIMATE" javaType="java.lang.Long" jdbcType="DECIMAL" />
      <arg column="TIMEESTIMATE" javaType="java.lang.Long" jdbcType="DECIMAL" />
      <arg column="TIMESPENT" javaType="java.lang.Long" jdbcType="DECIMAL" />
      <arg column="WORKFLOW_ID" javaType="java.lang.Long" jdbcType="DECIMAL" />
      <arg column="SECURITY" javaType="java.lang.Long" jdbcType="DECIMAL" />
      <arg column="FIXFOR" javaType="java.lang.Long" jdbcType="DECIMAL" />
      <arg column="COMPONENT" javaType="java.lang.Long" jdbcType="DECIMAL" />
      <arg column="close_date" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="difficulty" javaType="java.lang.Double" jdbcType="DECIMAL" />
      <arg column="TopdeepBean" javaType="java.lang.Double" jdbcType="DECIMAL" />
      <arg column="user_name" javaType="java.lang.String" jdbcType="VARCHAR" />
    </constructor>
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="cn.topdeep.projgroup.entity.jiradb.ViewTopdeepWorkWithBLOBs">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <constructor>
      <arg column="ID" javaType="java.lang.Long" jdbcType="DECIMAL" />
      <arg column="pkey" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="PROJECT" javaType="java.lang.Long" jdbcType="DECIMAL" />
      <arg column="REPORTER" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="ASSIGNEE" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="issuetype" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="SUMMARY" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="PRIORITY" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="RESOLUTION" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="issuestatus" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="CREATED" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="UPDATED" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="DUEDATE" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="RESOLUTIONDATE" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="VOTES" javaType="java.lang.Long" jdbcType="DECIMAL" />
      <arg column="WATCHES" javaType="java.lang.Long" jdbcType="DECIMAL" />
      <arg column="TIMEORIGINALESTIMATE" javaType="java.lang.Long" jdbcType="DECIMAL" />
      <arg column="TIMEESTIMATE" javaType="java.lang.Long" jdbcType="DECIMAL" />
      <arg column="TIMESPENT" javaType="java.lang.Long" jdbcType="DECIMAL" />
      <arg column="WORKFLOW_ID" javaType="java.lang.Long" jdbcType="DECIMAL" />
      <arg column="SECURITY" javaType="java.lang.Long" jdbcType="DECIMAL" />
      <arg column="FIXFOR" javaType="java.lang.Long" jdbcType="DECIMAL" />
      <arg column="COMPONENT" javaType="java.lang.Long" jdbcType="DECIMAL" />
      <arg column="close_date" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="difficulty" javaType="java.lang.Double" jdbcType="DECIMAL" />
      <arg column="TopdeepBean" javaType="java.lang.Double" jdbcType="DECIMAL" />
      <arg column="user_name" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="DESCRIPTION" javaType="java.lang.String" jdbcType="LONGVARCHAR" />
      <arg column="ENVIRONMENT" javaType="java.lang.String" jdbcType="LONGVARCHAR" />
    </constructor>
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    ID, pkey, PROJECT, REPORTER, ASSIGNEE, issuetype, SUMMARY, PRIORITY, RESOLUTION, 
    issuestatus, CREATED, UPDATED, DUEDATE, RESOLUTIONDATE, VOTES, WATCHES, TIMEORIGINALESTIMATE, 
    TIMEESTIMATE, TIMESPENT, WORKFLOW_ID, SECURITY, FIXFOR, COMPONENT, close_date, difficulty, 
    TopdeepBean, user_name
  </sql>
  <sql id="Blob_Column_List">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    DESCRIPTION, ENVIRONMENT
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="cn.topdeep.projgroup.entity.jiradb.ViewTopdeepWorkExample" resultMap="ResultMapWithBLOBs">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <include refid="PagePrefix" />
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from view_topdeep_work
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <include refid="PageSuffix" />
  </select>
  <select id="selectByExample" parameterType="cn.topdeep.projgroup.entity.jiradb.ViewTopdeepWorkExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <include refid="PagePrefix" />
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from view_topdeep_work
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <include refid="PageSuffix" />
  </select>
  <delete id="deleteByExample" parameterType="cn.topdeep.projgroup.entity.jiradb.ViewTopdeepWorkExample">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from view_topdeep_work
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.topdeep.projgroup.entity.jiradb.ViewTopdeepWorkWithBLOBs">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into view_topdeep_work (ID, pkey, PROJECT, 
      REPORTER, ASSIGNEE, issuetype, 
      SUMMARY, PRIORITY, RESOLUTION, 
      issuestatus, CREATED, UPDATED, 
      DUEDATE, RESOLUTIONDATE, VOTES, 
      WATCHES, TIMEORIGINALESTIMATE, TIMEESTIMATE, 
      TIMESPENT, WORKFLOW_ID, SECURITY, 
      FIXFOR, COMPONENT, close_date, 
      difficulty, TopdeepBean, user_name, 
      DESCRIPTION, ENVIRONMENT)
    values (#{id,jdbcType=DECIMAL}, #{pkey,jdbcType=VARCHAR}, #{project,jdbcType=DECIMAL}, 
      #{reporter,jdbcType=VARCHAR}, #{assignee,jdbcType=VARCHAR}, #{issuetype,jdbcType=VARCHAR}, 
      #{summary,jdbcType=VARCHAR}, #{priority,jdbcType=VARCHAR}, #{resolution,jdbcType=VARCHAR}, 
      #{issuestatus,jdbcType=VARCHAR}, #{created,jdbcType=TIMESTAMP}, #{updated,jdbcType=TIMESTAMP}, 
      #{duedate,jdbcType=TIMESTAMP}, #{resolutiondate,jdbcType=TIMESTAMP}, #{votes,jdbcType=DECIMAL}, 
      #{watches,jdbcType=DECIMAL}, #{timeoriginalestimate,jdbcType=DECIMAL}, #{timeestimate,jdbcType=DECIMAL}, 
      #{timespent,jdbcType=DECIMAL}, #{workflowId,jdbcType=DECIMAL}, #{security,jdbcType=DECIMAL}, 
      #{fixfor,jdbcType=DECIMAL}, #{component,jdbcType=DECIMAL}, #{closeDate,jdbcType=TIMESTAMP}, 
      #{difficulty,jdbcType=DECIMAL}, #{topdeepbean,jdbcType=DECIMAL}, #{userName,jdbcType=VARCHAR}, 
      #{description,jdbcType=LONGVARCHAR}, #{environment,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="cn.topdeep.projgroup.entity.jiradb.ViewTopdeepWorkWithBLOBs">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into view_topdeep_work
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        ID,
      </if>
      <if test="pkey != null">
        pkey,
      </if>
      <if test="project != null">
        PROJECT,
      </if>
      <if test="reporter != null">
        REPORTER,
      </if>
      <if test="assignee != null">
        ASSIGNEE,
      </if>
      <if test="issuetype != null">
        issuetype,
      </if>
      <if test="summary != null">
        SUMMARY,
      </if>
      <if test="priority != null">
        PRIORITY,
      </if>
      <if test="resolution != null">
        RESOLUTION,
      </if>
      <if test="issuestatus != null">
        issuestatus,
      </if>
      <if test="created != null">
        CREATED,
      </if>
      <if test="updated != null">
        UPDATED,
      </if>
      <if test="duedate != null">
        DUEDATE,
      </if>
      <if test="resolutiondate != null">
        RESOLUTIONDATE,
      </if>
      <if test="votes != null">
        VOTES,
      </if>
      <if test="watches != null">
        WATCHES,
      </if>
      <if test="timeoriginalestimate != null">
        TIMEORIGINALESTIMATE,
      </if>
      <if test="timeestimate != null">
        TIMEESTIMATE,
      </if>
      <if test="timespent != null">
        TIMESPENT,
      </if>
      <if test="workflowId != null">
        WORKFLOW_ID,
      </if>
      <if test="security != null">
        SECURITY,
      </if>
      <if test="fixfor != null">
        FIXFOR,
      </if>
      <if test="component != null">
        COMPONENT,
      </if>
      <if test="closeDate != null">
        close_date,
      </if>
      <if test="difficulty != null">
        difficulty,
      </if>
      <if test="topdeepbean != null">
        TopdeepBean,
      </if>
      <if test="userName != null">
        user_name,
      </if>
      <if test="description != null">
        DESCRIPTION,
      </if>
      <if test="environment != null">
        ENVIRONMENT,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=DECIMAL},
      </if>
      <if test="pkey != null">
        #{pkey,jdbcType=VARCHAR},
      </if>
      <if test="project != null">
        #{project,jdbcType=DECIMAL},
      </if>
      <if test="reporter != null">
        #{reporter,jdbcType=VARCHAR},
      </if>
      <if test="assignee != null">
        #{assignee,jdbcType=VARCHAR},
      </if>
      <if test="issuetype != null">
        #{issuetype,jdbcType=VARCHAR},
      </if>
      <if test="summary != null">
        #{summary,jdbcType=VARCHAR},
      </if>
      <if test="priority != null">
        #{priority,jdbcType=VARCHAR},
      </if>
      <if test="resolution != null">
        #{resolution,jdbcType=VARCHAR},
      </if>
      <if test="issuestatus != null">
        #{issuestatus,jdbcType=VARCHAR},
      </if>
      <if test="created != null">
        #{created,jdbcType=TIMESTAMP},
      </if>
      <if test="updated != null">
        #{updated,jdbcType=TIMESTAMP},
      </if>
      <if test="duedate != null">
        #{duedate,jdbcType=TIMESTAMP},
      </if>
      <if test="resolutiondate != null">
        #{resolutiondate,jdbcType=TIMESTAMP},
      </if>
      <if test="votes != null">
        #{votes,jdbcType=DECIMAL},
      </if>
      <if test="watches != null">
        #{watches,jdbcType=DECIMAL},
      </if>
      <if test="timeoriginalestimate != null">
        #{timeoriginalestimate,jdbcType=DECIMAL},
      </if>
      <if test="timeestimate != null">
        #{timeestimate,jdbcType=DECIMAL},
      </if>
      <if test="timespent != null">
        #{timespent,jdbcType=DECIMAL},
      </if>
      <if test="workflowId != null">
        #{workflowId,jdbcType=DECIMAL},
      </if>
      <if test="security != null">
        #{security,jdbcType=DECIMAL},
      </if>
      <if test="fixfor != null">
        #{fixfor,jdbcType=DECIMAL},
      </if>
      <if test="component != null">
        #{component,jdbcType=DECIMAL},
      </if>
      <if test="closeDate != null">
        #{closeDate,jdbcType=TIMESTAMP},
      </if>
      <if test="difficulty != null">
        #{difficulty,jdbcType=DECIMAL},
      </if>
      <if test="topdeepbean != null">
        #{topdeepbean,jdbcType=DECIMAL},
      </if>
      <if test="userName != null">
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        #{description,jdbcType=LONGVARCHAR},
      </if>
      <if test="environment != null">
        #{environment,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.topdeep.projgroup.entity.jiradb.ViewTopdeepWorkExample" resultType="java.lang.Integer">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from view_topdeep_work
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update view_topdeep_work
    <set>
      <if test="record.id != null">
        ID = #{record.id,jdbcType=DECIMAL},
      </if>
      <if test="record.pkey != null">
        pkey = #{record.pkey,jdbcType=VARCHAR},
      </if>
      <if test="record.project != null">
        PROJECT = #{record.project,jdbcType=DECIMAL},
      </if>
      <if test="record.reporter != null">
        REPORTER = #{record.reporter,jdbcType=VARCHAR},
      </if>
      <if test="record.assignee != null">
        ASSIGNEE = #{record.assignee,jdbcType=VARCHAR},
      </if>
      <if test="record.issuetype != null">
        issuetype = #{record.issuetype,jdbcType=VARCHAR},
      </if>
      <if test="record.summary != null">
        SUMMARY = #{record.summary,jdbcType=VARCHAR},
      </if>
      <if test="record.priority != null">
        PRIORITY = #{record.priority,jdbcType=VARCHAR},
      </if>
      <if test="record.resolution != null">
        RESOLUTION = #{record.resolution,jdbcType=VARCHAR},
      </if>
      <if test="record.issuestatus != null">
        issuestatus = #{record.issuestatus,jdbcType=VARCHAR},
      </if>
      <if test="record.created != null">
        CREATED = #{record.created,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updated != null">
        UPDATED = #{record.updated,jdbcType=TIMESTAMP},
      </if>
      <if test="record.duedate != null">
        DUEDATE = #{record.duedate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.resolutiondate != null">
        RESOLUTIONDATE = #{record.resolutiondate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.votes != null">
        VOTES = #{record.votes,jdbcType=DECIMAL},
      </if>
      <if test="record.watches != null">
        WATCHES = #{record.watches,jdbcType=DECIMAL},
      </if>
      <if test="record.timeoriginalestimate != null">
        TIMEORIGINALESTIMATE = #{record.timeoriginalestimate,jdbcType=DECIMAL},
      </if>
      <if test="record.timeestimate != null">
        TIMEESTIMATE = #{record.timeestimate,jdbcType=DECIMAL},
      </if>
      <if test="record.timespent != null">
        TIMESPENT = #{record.timespent,jdbcType=DECIMAL},
      </if>
      <if test="record.workflowId != null">
        WORKFLOW_ID = #{record.workflowId,jdbcType=DECIMAL},
      </if>
      <if test="record.security != null">
        SECURITY = #{record.security,jdbcType=DECIMAL},
      </if>
      <if test="record.fixfor != null">
        FIXFOR = #{record.fixfor,jdbcType=DECIMAL},
      </if>
      <if test="record.component != null">
        COMPONENT = #{record.component,jdbcType=DECIMAL},
      </if>
      <if test="record.closeDate != null">
        close_date = #{record.closeDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.difficulty != null">
        difficulty = #{record.difficulty,jdbcType=DECIMAL},
      </if>
      <if test="record.topdeepbean != null">
        TopdeepBean = #{record.topdeepbean,jdbcType=DECIMAL},
      </if>
      <if test="record.userName != null">
        user_name = #{record.userName,jdbcType=VARCHAR},
      </if>
      <if test="record.description != null">
        DESCRIPTION = #{record.description,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.environment != null">
        ENVIRONMENT = #{record.environment,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update view_topdeep_work
    set ID = #{record.id,jdbcType=DECIMAL},
      pkey = #{record.pkey,jdbcType=VARCHAR},
      PROJECT = #{record.project,jdbcType=DECIMAL},
      REPORTER = #{record.reporter,jdbcType=VARCHAR},
      ASSIGNEE = #{record.assignee,jdbcType=VARCHAR},
      issuetype = #{record.issuetype,jdbcType=VARCHAR},
      SUMMARY = #{record.summary,jdbcType=VARCHAR},
      PRIORITY = #{record.priority,jdbcType=VARCHAR},
      RESOLUTION = #{record.resolution,jdbcType=VARCHAR},
      issuestatus = #{record.issuestatus,jdbcType=VARCHAR},
      CREATED = #{record.created,jdbcType=TIMESTAMP},
      UPDATED = #{record.updated,jdbcType=TIMESTAMP},
      DUEDATE = #{record.duedate,jdbcType=TIMESTAMP},
      RESOLUTIONDATE = #{record.resolutiondate,jdbcType=TIMESTAMP},
      VOTES = #{record.votes,jdbcType=DECIMAL},
      WATCHES = #{record.watches,jdbcType=DECIMAL},
      TIMEORIGINALESTIMATE = #{record.timeoriginalestimate,jdbcType=DECIMAL},
      TIMEESTIMATE = #{record.timeestimate,jdbcType=DECIMAL},
      TIMESPENT = #{record.timespent,jdbcType=DECIMAL},
      WORKFLOW_ID = #{record.workflowId,jdbcType=DECIMAL},
      SECURITY = #{record.security,jdbcType=DECIMAL},
      FIXFOR = #{record.fixfor,jdbcType=DECIMAL},
      COMPONENT = #{record.component,jdbcType=DECIMAL},
      close_date = #{record.closeDate,jdbcType=TIMESTAMP},
      difficulty = #{record.difficulty,jdbcType=DECIMAL},
      TopdeepBean = #{record.topdeepbean,jdbcType=DECIMAL},
      user_name = #{record.userName,jdbcType=VARCHAR},
      DESCRIPTION = #{record.description,jdbcType=LONGVARCHAR},
      ENVIRONMENT = #{record.environment,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update view_topdeep_work
    set ID = #{record.id,jdbcType=DECIMAL},
      pkey = #{record.pkey,jdbcType=VARCHAR},
      PROJECT = #{record.project,jdbcType=DECIMAL},
      REPORTER = #{record.reporter,jdbcType=VARCHAR},
      ASSIGNEE = #{record.assignee,jdbcType=VARCHAR},
      issuetype = #{record.issuetype,jdbcType=VARCHAR},
      SUMMARY = #{record.summary,jdbcType=VARCHAR},
      PRIORITY = #{record.priority,jdbcType=VARCHAR},
      RESOLUTION = #{record.resolution,jdbcType=VARCHAR},
      issuestatus = #{record.issuestatus,jdbcType=VARCHAR},
      CREATED = #{record.created,jdbcType=TIMESTAMP},
      UPDATED = #{record.updated,jdbcType=TIMESTAMP},
      DUEDATE = #{record.duedate,jdbcType=TIMESTAMP},
      RESOLUTIONDATE = #{record.resolutiondate,jdbcType=TIMESTAMP},
      VOTES = #{record.votes,jdbcType=DECIMAL},
      WATCHES = #{record.watches,jdbcType=DECIMAL},
      TIMEORIGINALESTIMATE = #{record.timeoriginalestimate,jdbcType=DECIMAL},
      TIMEESTIMATE = #{record.timeestimate,jdbcType=DECIMAL},
      TIMESPENT = #{record.timespent,jdbcType=DECIMAL},
      WORKFLOW_ID = #{record.workflowId,jdbcType=DECIMAL},
      SECURITY = #{record.security,jdbcType=DECIMAL},
      FIXFOR = #{record.fixfor,jdbcType=DECIMAL},
      COMPONENT = #{record.component,jdbcType=DECIMAL},
      close_date = #{record.closeDate,jdbcType=TIMESTAMP},
      difficulty = #{record.difficulty,jdbcType=DECIMAL},
      TopdeepBean = #{record.topdeepbean,jdbcType=DECIMAL},
      user_name = #{record.userName,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <sql databaseId="oracle" id="PagePrefix">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <if test="page != null">
      select * from ( select row_.*, rownum rownum_ from ( 
    </if>
  </sql>
  <sql databaseId="mysql" id="PagePrefix">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <if test="page != null">
      select * from ( 
    </if>
  </sql>
  <sql databaseId="oracle" id="PageSuffix">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <if test="page != null">
      <![CDATA[ ) row_ ) where rownum_ > #{page.begin} and rownum_ <= #{page.end} ]]>
    </if>
  </sql>
  <sql databaseId="mysql" id="PageSuffix">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <if test="page != null">
      <![CDATA[ ) ___ttt___ limit #{page.begin}, #{page.rowsOfPage} ]]>
    </if>
  </sql>
</mapper>