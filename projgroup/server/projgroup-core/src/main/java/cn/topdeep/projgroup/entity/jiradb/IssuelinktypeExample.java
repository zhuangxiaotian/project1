package cn.topdeep.projgroup.entity.jiradb;

import common.entity.Page;
import java.util.ArrayList;
import java.util.List;

public class IssuelinktypeExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table issuelinktype
     *
     * @mbggenerated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table issuelinktype
     *
     * @mbggenerated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table issuelinktype
     *
     * @mbggenerated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table issuelinktype
     *
     * @mbggenerated
     */
    protected Page page;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table issuelinktype
     *
     * @mbggenerated
     */
    public IssuelinktypeExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table issuelinktype
     *
     * @mbggenerated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table issuelinktype
     *
     * @mbggenerated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table issuelinktype
     *
     * @mbggenerated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table issuelinktype
     *
     * @mbggenerated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table issuelinktype
     *
     * @mbggenerated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table issuelinktype
     *
     * @mbggenerated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table issuelinktype
     *
     * @mbggenerated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table issuelinktype
     *
     * @mbggenerated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table issuelinktype
     *
     * @mbggenerated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table issuelinktype
     *
     * @mbggenerated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table issuelinktype
     *
     * @mbggenerated
     */
    public void setPage(Page page) {
        this.page=page;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table issuelinktype
     *
     * @mbggenerated
     */
    public Page getPage() {
        return page;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table issuelinktype
     *
     * @mbggenerated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("ID is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("ID is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Long value) {
            addCriterion("ID =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Long value) {
            addCriterion("ID <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Long value) {
            addCriterion("ID >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Long value) {
            addCriterion("ID >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Long value) {
            addCriterion("ID <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Long value) {
            addCriterion("ID <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Long> values) {
            addCriterion("ID in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Long> values) {
            addCriterion("ID not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Long value1, Long value2) {
            addCriterion("ID between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Long value1, Long value2) {
            addCriterion("ID not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andLinknameIsNull() {
            addCriterion("LINKNAME is null");
            return (Criteria) this;
        }

        public Criteria andLinknameIsNotNull() {
            addCriterion("LINKNAME is not null");
            return (Criteria) this;
        }

        public Criteria andLinknameEqualTo(String value) {
            addCriterion("LINKNAME =", value, "linkname");
            return (Criteria) this;
        }

        public Criteria andLinknameNotEqualTo(String value) {
            addCriterion("LINKNAME <>", value, "linkname");
            return (Criteria) this;
        }

        public Criteria andLinknameGreaterThan(String value) {
            addCriterion("LINKNAME >", value, "linkname");
            return (Criteria) this;
        }

        public Criteria andLinknameGreaterThanOrEqualTo(String value) {
            addCriterion("LINKNAME >=", value, "linkname");
            return (Criteria) this;
        }

        public Criteria andLinknameLessThan(String value) {
            addCriterion("LINKNAME <", value, "linkname");
            return (Criteria) this;
        }

        public Criteria andLinknameLessThanOrEqualTo(String value) {
            addCriterion("LINKNAME <=", value, "linkname");
            return (Criteria) this;
        }

        public Criteria andLinknameLike(String value) {
            addCriterion("LINKNAME like", value, "linkname");
            return (Criteria) this;
        }

        public Criteria andLinknameNotLike(String value) {
            addCriterion("LINKNAME not like", value, "linkname");
            return (Criteria) this;
        }

        public Criteria andLinknameIn(List<String> values) {
            addCriterion("LINKNAME in", values, "linkname");
            return (Criteria) this;
        }

        public Criteria andLinknameNotIn(List<String> values) {
            addCriterion("LINKNAME not in", values, "linkname");
            return (Criteria) this;
        }

        public Criteria andLinknameBetween(String value1, String value2) {
            addCriterion("LINKNAME between", value1, value2, "linkname");
            return (Criteria) this;
        }

        public Criteria andLinknameNotBetween(String value1, String value2) {
            addCriterion("LINKNAME not between", value1, value2, "linkname");
            return (Criteria) this;
        }

        public Criteria andInwardIsNull() {
            addCriterion("INWARD is null");
            return (Criteria) this;
        }

        public Criteria andInwardIsNotNull() {
            addCriterion("INWARD is not null");
            return (Criteria) this;
        }

        public Criteria andInwardEqualTo(String value) {
            addCriterion("INWARD =", value, "inward");
            return (Criteria) this;
        }

        public Criteria andInwardNotEqualTo(String value) {
            addCriterion("INWARD <>", value, "inward");
            return (Criteria) this;
        }

        public Criteria andInwardGreaterThan(String value) {
            addCriterion("INWARD >", value, "inward");
            return (Criteria) this;
        }

        public Criteria andInwardGreaterThanOrEqualTo(String value) {
            addCriterion("INWARD >=", value, "inward");
            return (Criteria) this;
        }

        public Criteria andInwardLessThan(String value) {
            addCriterion("INWARD <", value, "inward");
            return (Criteria) this;
        }

        public Criteria andInwardLessThanOrEqualTo(String value) {
            addCriterion("INWARD <=", value, "inward");
            return (Criteria) this;
        }

        public Criteria andInwardLike(String value) {
            addCriterion("INWARD like", value, "inward");
            return (Criteria) this;
        }

        public Criteria andInwardNotLike(String value) {
            addCriterion("INWARD not like", value, "inward");
            return (Criteria) this;
        }

        public Criteria andInwardIn(List<String> values) {
            addCriterion("INWARD in", values, "inward");
            return (Criteria) this;
        }

        public Criteria andInwardNotIn(List<String> values) {
            addCriterion("INWARD not in", values, "inward");
            return (Criteria) this;
        }

        public Criteria andInwardBetween(String value1, String value2) {
            addCriterion("INWARD between", value1, value2, "inward");
            return (Criteria) this;
        }

        public Criteria andInwardNotBetween(String value1, String value2) {
            addCriterion("INWARD not between", value1, value2, "inward");
            return (Criteria) this;
        }

        public Criteria andOutwardIsNull() {
            addCriterion("OUTWARD is null");
            return (Criteria) this;
        }

        public Criteria andOutwardIsNotNull() {
            addCriterion("OUTWARD is not null");
            return (Criteria) this;
        }

        public Criteria andOutwardEqualTo(String value) {
            addCriterion("OUTWARD =", value, "outward");
            return (Criteria) this;
        }

        public Criteria andOutwardNotEqualTo(String value) {
            addCriterion("OUTWARD <>", value, "outward");
            return (Criteria) this;
        }

        public Criteria andOutwardGreaterThan(String value) {
            addCriterion("OUTWARD >", value, "outward");
            return (Criteria) this;
        }

        public Criteria andOutwardGreaterThanOrEqualTo(String value) {
            addCriterion("OUTWARD >=", value, "outward");
            return (Criteria) this;
        }

        public Criteria andOutwardLessThan(String value) {
            addCriterion("OUTWARD <", value, "outward");
            return (Criteria) this;
        }

        public Criteria andOutwardLessThanOrEqualTo(String value) {
            addCriterion("OUTWARD <=", value, "outward");
            return (Criteria) this;
        }

        public Criteria andOutwardLike(String value) {
            addCriterion("OUTWARD like", value, "outward");
            return (Criteria) this;
        }

        public Criteria andOutwardNotLike(String value) {
            addCriterion("OUTWARD not like", value, "outward");
            return (Criteria) this;
        }

        public Criteria andOutwardIn(List<String> values) {
            addCriterion("OUTWARD in", values, "outward");
            return (Criteria) this;
        }

        public Criteria andOutwardNotIn(List<String> values) {
            addCriterion("OUTWARD not in", values, "outward");
            return (Criteria) this;
        }

        public Criteria andOutwardBetween(String value1, String value2) {
            addCriterion("OUTWARD between", value1, value2, "outward");
            return (Criteria) this;
        }

        public Criteria andOutwardNotBetween(String value1, String value2) {
            addCriterion("OUTWARD not between", value1, value2, "outward");
            return (Criteria) this;
        }

        public Criteria andPstyleIsNull() {
            addCriterion("pstyle is null");
            return (Criteria) this;
        }

        public Criteria andPstyleIsNotNull() {
            addCriterion("pstyle is not null");
            return (Criteria) this;
        }

        public Criteria andPstyleEqualTo(String value) {
            addCriterion("pstyle =", value, "pstyle");
            return (Criteria) this;
        }

        public Criteria andPstyleNotEqualTo(String value) {
            addCriterion("pstyle <>", value, "pstyle");
            return (Criteria) this;
        }

        public Criteria andPstyleGreaterThan(String value) {
            addCriterion("pstyle >", value, "pstyle");
            return (Criteria) this;
        }

        public Criteria andPstyleGreaterThanOrEqualTo(String value) {
            addCriterion("pstyle >=", value, "pstyle");
            return (Criteria) this;
        }

        public Criteria andPstyleLessThan(String value) {
            addCriterion("pstyle <", value, "pstyle");
            return (Criteria) this;
        }

        public Criteria andPstyleLessThanOrEqualTo(String value) {
            addCriterion("pstyle <=", value, "pstyle");
            return (Criteria) this;
        }

        public Criteria andPstyleLike(String value) {
            addCriterion("pstyle like", value, "pstyle");
            return (Criteria) this;
        }

        public Criteria andPstyleNotLike(String value) {
            addCriterion("pstyle not like", value, "pstyle");
            return (Criteria) this;
        }

        public Criteria andPstyleIn(List<String> values) {
            addCriterion("pstyle in", values, "pstyle");
            return (Criteria) this;
        }

        public Criteria andPstyleNotIn(List<String> values) {
            addCriterion("pstyle not in", values, "pstyle");
            return (Criteria) this;
        }

        public Criteria andPstyleBetween(String value1, String value2) {
            addCriterion("pstyle between", value1, value2, "pstyle");
            return (Criteria) this;
        }

        public Criteria andPstyleNotBetween(String value1, String value2) {
            addCriterion("pstyle not between", value1, value2, "pstyle");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table issuelinktype
     *
     * @mbggenerated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table issuelinktype
     *
     * @mbggenerated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}