package cn.topdeep.projgroup.entity.jiradb;

import common.entity.Page;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class FiltersubscriptionExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table filtersubscription
     *
     * @mbggenerated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table filtersubscription
     *
     * @mbggenerated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table filtersubscription
     *
     * @mbggenerated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table filtersubscription
     *
     * @mbggenerated
     */
    protected Page page;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table filtersubscription
     *
     * @mbggenerated
     */
    public FiltersubscriptionExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table filtersubscription
     *
     * @mbggenerated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table filtersubscription
     *
     * @mbggenerated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table filtersubscription
     *
     * @mbggenerated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table filtersubscription
     *
     * @mbggenerated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table filtersubscription
     *
     * @mbggenerated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table filtersubscription
     *
     * @mbggenerated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table filtersubscription
     *
     * @mbggenerated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table filtersubscription
     *
     * @mbggenerated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table filtersubscription
     *
     * @mbggenerated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table filtersubscription
     *
     * @mbggenerated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table filtersubscription
     *
     * @mbggenerated
     */
    public void setPage(Page page) {
        this.page=page;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table filtersubscription
     *
     * @mbggenerated
     */
    public Page getPage() {
        return page;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table filtersubscription
     *
     * @mbggenerated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("ID is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("ID is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Long value) {
            addCriterion("ID =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Long value) {
            addCriterion("ID <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Long value) {
            addCriterion("ID >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Long value) {
            addCriterion("ID >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Long value) {
            addCriterion("ID <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Long value) {
            addCriterion("ID <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Long> values) {
            addCriterion("ID in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Long> values) {
            addCriterion("ID not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Long value1, Long value2) {
            addCriterion("ID between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Long value1, Long value2) {
            addCriterion("ID not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andFilterIDIsNull() {
            addCriterion("FILTER_I_D is null");
            return (Criteria) this;
        }

        public Criteria andFilterIDIsNotNull() {
            addCriterion("FILTER_I_D is not null");
            return (Criteria) this;
        }

        public Criteria andFilterIDEqualTo(Long value) {
            addCriterion("FILTER_I_D =", value, "filterID");
            return (Criteria) this;
        }

        public Criteria andFilterIDNotEqualTo(Long value) {
            addCriterion("FILTER_I_D <>", value, "filterID");
            return (Criteria) this;
        }

        public Criteria andFilterIDGreaterThan(Long value) {
            addCriterion("FILTER_I_D >", value, "filterID");
            return (Criteria) this;
        }

        public Criteria andFilterIDGreaterThanOrEqualTo(Long value) {
            addCriterion("FILTER_I_D >=", value, "filterID");
            return (Criteria) this;
        }

        public Criteria andFilterIDLessThan(Long value) {
            addCriterion("FILTER_I_D <", value, "filterID");
            return (Criteria) this;
        }

        public Criteria andFilterIDLessThanOrEqualTo(Long value) {
            addCriterion("FILTER_I_D <=", value, "filterID");
            return (Criteria) this;
        }

        public Criteria andFilterIDIn(List<Long> values) {
            addCriterion("FILTER_I_D in", values, "filterID");
            return (Criteria) this;
        }

        public Criteria andFilterIDNotIn(List<Long> values) {
            addCriterion("FILTER_I_D not in", values, "filterID");
            return (Criteria) this;
        }

        public Criteria andFilterIDBetween(Long value1, Long value2) {
            addCriterion("FILTER_I_D between", value1, value2, "filterID");
            return (Criteria) this;
        }

        public Criteria andFilterIDNotBetween(Long value1, Long value2) {
            addCriterion("FILTER_I_D not between", value1, value2, "filterID");
            return (Criteria) this;
        }

        public Criteria andUsernameIsNull() {
            addCriterion("USERNAME is null");
            return (Criteria) this;
        }

        public Criteria andUsernameIsNotNull() {
            addCriterion("USERNAME is not null");
            return (Criteria) this;
        }

        public Criteria andUsernameEqualTo(String value) {
            addCriterion("USERNAME =", value, "username");
            return (Criteria) this;
        }

        public Criteria andUsernameNotEqualTo(String value) {
            addCriterion("USERNAME <>", value, "username");
            return (Criteria) this;
        }

        public Criteria andUsernameGreaterThan(String value) {
            addCriterion("USERNAME >", value, "username");
            return (Criteria) this;
        }

        public Criteria andUsernameGreaterThanOrEqualTo(String value) {
            addCriterion("USERNAME >=", value, "username");
            return (Criteria) this;
        }

        public Criteria andUsernameLessThan(String value) {
            addCriterion("USERNAME <", value, "username");
            return (Criteria) this;
        }

        public Criteria andUsernameLessThanOrEqualTo(String value) {
            addCriterion("USERNAME <=", value, "username");
            return (Criteria) this;
        }

        public Criteria andUsernameLike(String value) {
            addCriterion("USERNAME like", value, "username");
            return (Criteria) this;
        }

        public Criteria andUsernameNotLike(String value) {
            addCriterion("USERNAME not like", value, "username");
            return (Criteria) this;
        }

        public Criteria andUsernameIn(List<String> values) {
            addCriterion("USERNAME in", values, "username");
            return (Criteria) this;
        }

        public Criteria andUsernameNotIn(List<String> values) {
            addCriterion("USERNAME not in", values, "username");
            return (Criteria) this;
        }

        public Criteria andUsernameBetween(String value1, String value2) {
            addCriterion("USERNAME between", value1, value2, "username");
            return (Criteria) this;
        }

        public Criteria andUsernameNotBetween(String value1, String value2) {
            addCriterion("USERNAME not between", value1, value2, "username");
            return (Criteria) this;
        }

        public Criteria andGroupnameIsNull() {
            addCriterion("groupname is null");
            return (Criteria) this;
        }

        public Criteria andGroupnameIsNotNull() {
            addCriterion("groupname is not null");
            return (Criteria) this;
        }

        public Criteria andGroupnameEqualTo(String value) {
            addCriterion("groupname =", value, "groupname");
            return (Criteria) this;
        }

        public Criteria andGroupnameNotEqualTo(String value) {
            addCriterion("groupname <>", value, "groupname");
            return (Criteria) this;
        }

        public Criteria andGroupnameGreaterThan(String value) {
            addCriterion("groupname >", value, "groupname");
            return (Criteria) this;
        }

        public Criteria andGroupnameGreaterThanOrEqualTo(String value) {
            addCriterion("groupname >=", value, "groupname");
            return (Criteria) this;
        }

        public Criteria andGroupnameLessThan(String value) {
            addCriterion("groupname <", value, "groupname");
            return (Criteria) this;
        }

        public Criteria andGroupnameLessThanOrEqualTo(String value) {
            addCriterion("groupname <=", value, "groupname");
            return (Criteria) this;
        }

        public Criteria andGroupnameLike(String value) {
            addCriterion("groupname like", value, "groupname");
            return (Criteria) this;
        }

        public Criteria andGroupnameNotLike(String value) {
            addCriterion("groupname not like", value, "groupname");
            return (Criteria) this;
        }

        public Criteria andGroupnameIn(List<String> values) {
            addCriterion("groupname in", values, "groupname");
            return (Criteria) this;
        }

        public Criteria andGroupnameNotIn(List<String> values) {
            addCriterion("groupname not in", values, "groupname");
            return (Criteria) this;
        }

        public Criteria andGroupnameBetween(String value1, String value2) {
            addCriterion("groupname between", value1, value2, "groupname");
            return (Criteria) this;
        }

        public Criteria andGroupnameNotBetween(String value1, String value2) {
            addCriterion("groupname not between", value1, value2, "groupname");
            return (Criteria) this;
        }

        public Criteria andLastRunIsNull() {
            addCriterion("LAST_RUN is null");
            return (Criteria) this;
        }

        public Criteria andLastRunIsNotNull() {
            addCriterion("LAST_RUN is not null");
            return (Criteria) this;
        }

        public Criteria andLastRunEqualTo(Date value) {
            addCriterion("LAST_RUN =", value, "lastRun");
            return (Criteria) this;
        }

        public Criteria andLastRunNotEqualTo(Date value) {
            addCriterion("LAST_RUN <>", value, "lastRun");
            return (Criteria) this;
        }

        public Criteria andLastRunGreaterThan(Date value) {
            addCriterion("LAST_RUN >", value, "lastRun");
            return (Criteria) this;
        }

        public Criteria andLastRunGreaterThanOrEqualTo(Date value) {
            addCriterion("LAST_RUN >=", value, "lastRun");
            return (Criteria) this;
        }

        public Criteria andLastRunLessThan(Date value) {
            addCriterion("LAST_RUN <", value, "lastRun");
            return (Criteria) this;
        }

        public Criteria andLastRunLessThanOrEqualTo(Date value) {
            addCriterion("LAST_RUN <=", value, "lastRun");
            return (Criteria) this;
        }

        public Criteria andLastRunIn(List<Date> values) {
            addCriterion("LAST_RUN in", values, "lastRun");
            return (Criteria) this;
        }

        public Criteria andLastRunNotIn(List<Date> values) {
            addCriterion("LAST_RUN not in", values, "lastRun");
            return (Criteria) this;
        }

        public Criteria andLastRunBetween(Date value1, Date value2) {
            addCriterion("LAST_RUN between", value1, value2, "lastRun");
            return (Criteria) this;
        }

        public Criteria andLastRunNotBetween(Date value1, Date value2) {
            addCriterion("LAST_RUN not between", value1, value2, "lastRun");
            return (Criteria) this;
        }

        public Criteria andEmailOnEmptyIsNull() {
            addCriterion("EMAIL_ON_EMPTY is null");
            return (Criteria) this;
        }

        public Criteria andEmailOnEmptyIsNotNull() {
            addCriterion("EMAIL_ON_EMPTY is not null");
            return (Criteria) this;
        }

        public Criteria andEmailOnEmptyEqualTo(String value) {
            addCriterion("EMAIL_ON_EMPTY =", value, "emailOnEmpty");
            return (Criteria) this;
        }

        public Criteria andEmailOnEmptyNotEqualTo(String value) {
            addCriterion("EMAIL_ON_EMPTY <>", value, "emailOnEmpty");
            return (Criteria) this;
        }

        public Criteria andEmailOnEmptyGreaterThan(String value) {
            addCriterion("EMAIL_ON_EMPTY >", value, "emailOnEmpty");
            return (Criteria) this;
        }

        public Criteria andEmailOnEmptyGreaterThanOrEqualTo(String value) {
            addCriterion("EMAIL_ON_EMPTY >=", value, "emailOnEmpty");
            return (Criteria) this;
        }

        public Criteria andEmailOnEmptyLessThan(String value) {
            addCriterion("EMAIL_ON_EMPTY <", value, "emailOnEmpty");
            return (Criteria) this;
        }

        public Criteria andEmailOnEmptyLessThanOrEqualTo(String value) {
            addCriterion("EMAIL_ON_EMPTY <=", value, "emailOnEmpty");
            return (Criteria) this;
        }

        public Criteria andEmailOnEmptyLike(String value) {
            addCriterion("EMAIL_ON_EMPTY like", value, "emailOnEmpty");
            return (Criteria) this;
        }

        public Criteria andEmailOnEmptyNotLike(String value) {
            addCriterion("EMAIL_ON_EMPTY not like", value, "emailOnEmpty");
            return (Criteria) this;
        }

        public Criteria andEmailOnEmptyIn(List<String> values) {
            addCriterion("EMAIL_ON_EMPTY in", values, "emailOnEmpty");
            return (Criteria) this;
        }

        public Criteria andEmailOnEmptyNotIn(List<String> values) {
            addCriterion("EMAIL_ON_EMPTY not in", values, "emailOnEmpty");
            return (Criteria) this;
        }

        public Criteria andEmailOnEmptyBetween(String value1, String value2) {
            addCriterion("EMAIL_ON_EMPTY between", value1, value2, "emailOnEmpty");
            return (Criteria) this;
        }

        public Criteria andEmailOnEmptyNotBetween(String value1, String value2) {
            addCriterion("EMAIL_ON_EMPTY not between", value1, value2, "emailOnEmpty");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table filtersubscription
     *
     * @mbggenerated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table filtersubscription
     *
     * @mbggenerated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}