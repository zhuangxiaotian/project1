package cn.topdeep.projgroup.entity.jiradb;

import common.entity.Page;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class WorklogExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table worklog
     *
     * @mbggenerated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table worklog
     *
     * @mbggenerated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table worklog
     *
     * @mbggenerated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table worklog
     *
     * @mbggenerated
     */
    protected Page page;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table worklog
     *
     * @mbggenerated
     */
    public WorklogExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table worklog
     *
     * @mbggenerated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table worklog
     *
     * @mbggenerated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table worklog
     *
     * @mbggenerated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table worklog
     *
     * @mbggenerated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table worklog
     *
     * @mbggenerated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table worklog
     *
     * @mbggenerated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table worklog
     *
     * @mbggenerated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table worklog
     *
     * @mbggenerated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table worklog
     *
     * @mbggenerated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table worklog
     *
     * @mbggenerated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table worklog
     *
     * @mbggenerated
     */
    public void setPage(Page page) {
        this.page=page;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table worklog
     *
     * @mbggenerated
     */
    public Page getPage() {
        return page;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table worklog
     *
     * @mbggenerated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("ID is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("ID is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Long value) {
            addCriterion("ID =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Long value) {
            addCriterion("ID <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Long value) {
            addCriterion("ID >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Long value) {
            addCriterion("ID >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Long value) {
            addCriterion("ID <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Long value) {
            addCriterion("ID <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Long> values) {
            addCriterion("ID in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Long> values) {
            addCriterion("ID not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Long value1, Long value2) {
            addCriterion("ID between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Long value1, Long value2) {
            addCriterion("ID not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIssueidIsNull() {
            addCriterion("issueid is null");
            return (Criteria) this;
        }

        public Criteria andIssueidIsNotNull() {
            addCriterion("issueid is not null");
            return (Criteria) this;
        }

        public Criteria andIssueidEqualTo(Long value) {
            addCriterion("issueid =", value, "issueid");
            return (Criteria) this;
        }

        public Criteria andIssueidNotEqualTo(Long value) {
            addCriterion("issueid <>", value, "issueid");
            return (Criteria) this;
        }

        public Criteria andIssueidGreaterThan(Long value) {
            addCriterion("issueid >", value, "issueid");
            return (Criteria) this;
        }

        public Criteria andIssueidGreaterThanOrEqualTo(Long value) {
            addCriterion("issueid >=", value, "issueid");
            return (Criteria) this;
        }

        public Criteria andIssueidLessThan(Long value) {
            addCriterion("issueid <", value, "issueid");
            return (Criteria) this;
        }

        public Criteria andIssueidLessThanOrEqualTo(Long value) {
            addCriterion("issueid <=", value, "issueid");
            return (Criteria) this;
        }

        public Criteria andIssueidIn(List<Long> values) {
            addCriterion("issueid in", values, "issueid");
            return (Criteria) this;
        }

        public Criteria andIssueidNotIn(List<Long> values) {
            addCriterion("issueid not in", values, "issueid");
            return (Criteria) this;
        }

        public Criteria andIssueidBetween(Long value1, Long value2) {
            addCriterion("issueid between", value1, value2, "issueid");
            return (Criteria) this;
        }

        public Criteria andIssueidNotBetween(Long value1, Long value2) {
            addCriterion("issueid not between", value1, value2, "issueid");
            return (Criteria) this;
        }

        public Criteria andAuthorIsNull() {
            addCriterion("AUTHOR is null");
            return (Criteria) this;
        }

        public Criteria andAuthorIsNotNull() {
            addCriterion("AUTHOR is not null");
            return (Criteria) this;
        }

        public Criteria andAuthorEqualTo(String value) {
            addCriterion("AUTHOR =", value, "author");
            return (Criteria) this;
        }

        public Criteria andAuthorNotEqualTo(String value) {
            addCriterion("AUTHOR <>", value, "author");
            return (Criteria) this;
        }

        public Criteria andAuthorGreaterThan(String value) {
            addCriterion("AUTHOR >", value, "author");
            return (Criteria) this;
        }

        public Criteria andAuthorGreaterThanOrEqualTo(String value) {
            addCriterion("AUTHOR >=", value, "author");
            return (Criteria) this;
        }

        public Criteria andAuthorLessThan(String value) {
            addCriterion("AUTHOR <", value, "author");
            return (Criteria) this;
        }

        public Criteria andAuthorLessThanOrEqualTo(String value) {
            addCriterion("AUTHOR <=", value, "author");
            return (Criteria) this;
        }

        public Criteria andAuthorLike(String value) {
            addCriterion("AUTHOR like", value, "author");
            return (Criteria) this;
        }

        public Criteria andAuthorNotLike(String value) {
            addCriterion("AUTHOR not like", value, "author");
            return (Criteria) this;
        }

        public Criteria andAuthorIn(List<String> values) {
            addCriterion("AUTHOR in", values, "author");
            return (Criteria) this;
        }

        public Criteria andAuthorNotIn(List<String> values) {
            addCriterion("AUTHOR not in", values, "author");
            return (Criteria) this;
        }

        public Criteria andAuthorBetween(String value1, String value2) {
            addCriterion("AUTHOR between", value1, value2, "author");
            return (Criteria) this;
        }

        public Criteria andAuthorNotBetween(String value1, String value2) {
            addCriterion("AUTHOR not between", value1, value2, "author");
            return (Criteria) this;
        }

        public Criteria andGrouplevelIsNull() {
            addCriterion("grouplevel is null");
            return (Criteria) this;
        }

        public Criteria andGrouplevelIsNotNull() {
            addCriterion("grouplevel is not null");
            return (Criteria) this;
        }

        public Criteria andGrouplevelEqualTo(String value) {
            addCriterion("grouplevel =", value, "grouplevel");
            return (Criteria) this;
        }

        public Criteria andGrouplevelNotEqualTo(String value) {
            addCriterion("grouplevel <>", value, "grouplevel");
            return (Criteria) this;
        }

        public Criteria andGrouplevelGreaterThan(String value) {
            addCriterion("grouplevel >", value, "grouplevel");
            return (Criteria) this;
        }

        public Criteria andGrouplevelGreaterThanOrEqualTo(String value) {
            addCriterion("grouplevel >=", value, "grouplevel");
            return (Criteria) this;
        }

        public Criteria andGrouplevelLessThan(String value) {
            addCriterion("grouplevel <", value, "grouplevel");
            return (Criteria) this;
        }

        public Criteria andGrouplevelLessThanOrEqualTo(String value) {
            addCriterion("grouplevel <=", value, "grouplevel");
            return (Criteria) this;
        }

        public Criteria andGrouplevelLike(String value) {
            addCriterion("grouplevel like", value, "grouplevel");
            return (Criteria) this;
        }

        public Criteria andGrouplevelNotLike(String value) {
            addCriterion("grouplevel not like", value, "grouplevel");
            return (Criteria) this;
        }

        public Criteria andGrouplevelIn(List<String> values) {
            addCriterion("grouplevel in", values, "grouplevel");
            return (Criteria) this;
        }

        public Criteria andGrouplevelNotIn(List<String> values) {
            addCriterion("grouplevel not in", values, "grouplevel");
            return (Criteria) this;
        }

        public Criteria andGrouplevelBetween(String value1, String value2) {
            addCriterion("grouplevel between", value1, value2, "grouplevel");
            return (Criteria) this;
        }

        public Criteria andGrouplevelNotBetween(String value1, String value2) {
            addCriterion("grouplevel not between", value1, value2, "grouplevel");
            return (Criteria) this;
        }

        public Criteria andRolelevelIsNull() {
            addCriterion("rolelevel is null");
            return (Criteria) this;
        }

        public Criteria andRolelevelIsNotNull() {
            addCriterion("rolelevel is not null");
            return (Criteria) this;
        }

        public Criteria andRolelevelEqualTo(Long value) {
            addCriterion("rolelevel =", value, "rolelevel");
            return (Criteria) this;
        }

        public Criteria andRolelevelNotEqualTo(Long value) {
            addCriterion("rolelevel <>", value, "rolelevel");
            return (Criteria) this;
        }

        public Criteria andRolelevelGreaterThan(Long value) {
            addCriterion("rolelevel >", value, "rolelevel");
            return (Criteria) this;
        }

        public Criteria andRolelevelGreaterThanOrEqualTo(Long value) {
            addCriterion("rolelevel >=", value, "rolelevel");
            return (Criteria) this;
        }

        public Criteria andRolelevelLessThan(Long value) {
            addCriterion("rolelevel <", value, "rolelevel");
            return (Criteria) this;
        }

        public Criteria andRolelevelLessThanOrEqualTo(Long value) {
            addCriterion("rolelevel <=", value, "rolelevel");
            return (Criteria) this;
        }

        public Criteria andRolelevelIn(List<Long> values) {
            addCriterion("rolelevel in", values, "rolelevel");
            return (Criteria) this;
        }

        public Criteria andRolelevelNotIn(List<Long> values) {
            addCriterion("rolelevel not in", values, "rolelevel");
            return (Criteria) this;
        }

        public Criteria andRolelevelBetween(Long value1, Long value2) {
            addCriterion("rolelevel between", value1, value2, "rolelevel");
            return (Criteria) this;
        }

        public Criteria andRolelevelNotBetween(Long value1, Long value2) {
            addCriterion("rolelevel not between", value1, value2, "rolelevel");
            return (Criteria) this;
        }

        public Criteria andCreatedIsNull() {
            addCriterion("CREATED is null");
            return (Criteria) this;
        }

        public Criteria andCreatedIsNotNull() {
            addCriterion("CREATED is not null");
            return (Criteria) this;
        }

        public Criteria andCreatedEqualTo(Date value) {
            addCriterion("CREATED =", value, "created");
            return (Criteria) this;
        }

        public Criteria andCreatedNotEqualTo(Date value) {
            addCriterion("CREATED <>", value, "created");
            return (Criteria) this;
        }

        public Criteria andCreatedGreaterThan(Date value) {
            addCriterion("CREATED >", value, "created");
            return (Criteria) this;
        }

        public Criteria andCreatedGreaterThanOrEqualTo(Date value) {
            addCriterion("CREATED >=", value, "created");
            return (Criteria) this;
        }

        public Criteria andCreatedLessThan(Date value) {
            addCriterion("CREATED <", value, "created");
            return (Criteria) this;
        }

        public Criteria andCreatedLessThanOrEqualTo(Date value) {
            addCriterion("CREATED <=", value, "created");
            return (Criteria) this;
        }

        public Criteria andCreatedIn(List<Date> values) {
            addCriterion("CREATED in", values, "created");
            return (Criteria) this;
        }

        public Criteria andCreatedNotIn(List<Date> values) {
            addCriterion("CREATED not in", values, "created");
            return (Criteria) this;
        }

        public Criteria andCreatedBetween(Date value1, Date value2) {
            addCriterion("CREATED between", value1, value2, "created");
            return (Criteria) this;
        }

        public Criteria andCreatedNotBetween(Date value1, Date value2) {
            addCriterion("CREATED not between", value1, value2, "created");
            return (Criteria) this;
        }

        public Criteria andUpdateauthorIsNull() {
            addCriterion("UPDATEAUTHOR is null");
            return (Criteria) this;
        }

        public Criteria andUpdateauthorIsNotNull() {
            addCriterion("UPDATEAUTHOR is not null");
            return (Criteria) this;
        }

        public Criteria andUpdateauthorEqualTo(String value) {
            addCriterion("UPDATEAUTHOR =", value, "updateauthor");
            return (Criteria) this;
        }

        public Criteria andUpdateauthorNotEqualTo(String value) {
            addCriterion("UPDATEAUTHOR <>", value, "updateauthor");
            return (Criteria) this;
        }

        public Criteria andUpdateauthorGreaterThan(String value) {
            addCriterion("UPDATEAUTHOR >", value, "updateauthor");
            return (Criteria) this;
        }

        public Criteria andUpdateauthorGreaterThanOrEqualTo(String value) {
            addCriterion("UPDATEAUTHOR >=", value, "updateauthor");
            return (Criteria) this;
        }

        public Criteria andUpdateauthorLessThan(String value) {
            addCriterion("UPDATEAUTHOR <", value, "updateauthor");
            return (Criteria) this;
        }

        public Criteria andUpdateauthorLessThanOrEqualTo(String value) {
            addCriterion("UPDATEAUTHOR <=", value, "updateauthor");
            return (Criteria) this;
        }

        public Criteria andUpdateauthorLike(String value) {
            addCriterion("UPDATEAUTHOR like", value, "updateauthor");
            return (Criteria) this;
        }

        public Criteria andUpdateauthorNotLike(String value) {
            addCriterion("UPDATEAUTHOR not like", value, "updateauthor");
            return (Criteria) this;
        }

        public Criteria andUpdateauthorIn(List<String> values) {
            addCriterion("UPDATEAUTHOR in", values, "updateauthor");
            return (Criteria) this;
        }

        public Criteria andUpdateauthorNotIn(List<String> values) {
            addCriterion("UPDATEAUTHOR not in", values, "updateauthor");
            return (Criteria) this;
        }

        public Criteria andUpdateauthorBetween(String value1, String value2) {
            addCriterion("UPDATEAUTHOR between", value1, value2, "updateauthor");
            return (Criteria) this;
        }

        public Criteria andUpdateauthorNotBetween(String value1, String value2) {
            addCriterion("UPDATEAUTHOR not between", value1, value2, "updateauthor");
            return (Criteria) this;
        }

        public Criteria andUpdatedIsNull() {
            addCriterion("UPDATED is null");
            return (Criteria) this;
        }

        public Criteria andUpdatedIsNotNull() {
            addCriterion("UPDATED is not null");
            return (Criteria) this;
        }

        public Criteria andUpdatedEqualTo(Date value) {
            addCriterion("UPDATED =", value, "updated");
            return (Criteria) this;
        }

        public Criteria andUpdatedNotEqualTo(Date value) {
            addCriterion("UPDATED <>", value, "updated");
            return (Criteria) this;
        }

        public Criteria andUpdatedGreaterThan(Date value) {
            addCriterion("UPDATED >", value, "updated");
            return (Criteria) this;
        }

        public Criteria andUpdatedGreaterThanOrEqualTo(Date value) {
            addCriterion("UPDATED >=", value, "updated");
            return (Criteria) this;
        }

        public Criteria andUpdatedLessThan(Date value) {
            addCriterion("UPDATED <", value, "updated");
            return (Criteria) this;
        }

        public Criteria andUpdatedLessThanOrEqualTo(Date value) {
            addCriterion("UPDATED <=", value, "updated");
            return (Criteria) this;
        }

        public Criteria andUpdatedIn(List<Date> values) {
            addCriterion("UPDATED in", values, "updated");
            return (Criteria) this;
        }

        public Criteria andUpdatedNotIn(List<Date> values) {
            addCriterion("UPDATED not in", values, "updated");
            return (Criteria) this;
        }

        public Criteria andUpdatedBetween(Date value1, Date value2) {
            addCriterion("UPDATED between", value1, value2, "updated");
            return (Criteria) this;
        }

        public Criteria andUpdatedNotBetween(Date value1, Date value2) {
            addCriterion("UPDATED not between", value1, value2, "updated");
            return (Criteria) this;
        }

        public Criteria andStartdateIsNull() {
            addCriterion("STARTDATE is null");
            return (Criteria) this;
        }

        public Criteria andStartdateIsNotNull() {
            addCriterion("STARTDATE is not null");
            return (Criteria) this;
        }

        public Criteria andStartdateEqualTo(Date value) {
            addCriterion("STARTDATE =", value, "startdate");
            return (Criteria) this;
        }

        public Criteria andStartdateNotEqualTo(Date value) {
            addCriterion("STARTDATE <>", value, "startdate");
            return (Criteria) this;
        }

        public Criteria andStartdateGreaterThan(Date value) {
            addCriterion("STARTDATE >", value, "startdate");
            return (Criteria) this;
        }

        public Criteria andStartdateGreaterThanOrEqualTo(Date value) {
            addCriterion("STARTDATE >=", value, "startdate");
            return (Criteria) this;
        }

        public Criteria andStartdateLessThan(Date value) {
            addCriterion("STARTDATE <", value, "startdate");
            return (Criteria) this;
        }

        public Criteria andStartdateLessThanOrEqualTo(Date value) {
            addCriterion("STARTDATE <=", value, "startdate");
            return (Criteria) this;
        }

        public Criteria andStartdateIn(List<Date> values) {
            addCriterion("STARTDATE in", values, "startdate");
            return (Criteria) this;
        }

        public Criteria andStartdateNotIn(List<Date> values) {
            addCriterion("STARTDATE not in", values, "startdate");
            return (Criteria) this;
        }

        public Criteria andStartdateBetween(Date value1, Date value2) {
            addCriterion("STARTDATE between", value1, value2, "startdate");
            return (Criteria) this;
        }

        public Criteria andStartdateNotBetween(Date value1, Date value2) {
            addCriterion("STARTDATE not between", value1, value2, "startdate");
            return (Criteria) this;
        }

        public Criteria andTimeworkedIsNull() {
            addCriterion("timeworked is null");
            return (Criteria) this;
        }

        public Criteria andTimeworkedIsNotNull() {
            addCriterion("timeworked is not null");
            return (Criteria) this;
        }

        public Criteria andTimeworkedEqualTo(Long value) {
            addCriterion("timeworked =", value, "timeworked");
            return (Criteria) this;
        }

        public Criteria andTimeworkedNotEqualTo(Long value) {
            addCriterion("timeworked <>", value, "timeworked");
            return (Criteria) this;
        }

        public Criteria andTimeworkedGreaterThan(Long value) {
            addCriterion("timeworked >", value, "timeworked");
            return (Criteria) this;
        }

        public Criteria andTimeworkedGreaterThanOrEqualTo(Long value) {
            addCriterion("timeworked >=", value, "timeworked");
            return (Criteria) this;
        }

        public Criteria andTimeworkedLessThan(Long value) {
            addCriterion("timeworked <", value, "timeworked");
            return (Criteria) this;
        }

        public Criteria andTimeworkedLessThanOrEqualTo(Long value) {
            addCriterion("timeworked <=", value, "timeworked");
            return (Criteria) this;
        }

        public Criteria andTimeworkedIn(List<Long> values) {
            addCriterion("timeworked in", values, "timeworked");
            return (Criteria) this;
        }

        public Criteria andTimeworkedNotIn(List<Long> values) {
            addCriterion("timeworked not in", values, "timeworked");
            return (Criteria) this;
        }

        public Criteria andTimeworkedBetween(Long value1, Long value2) {
            addCriterion("timeworked between", value1, value2, "timeworked");
            return (Criteria) this;
        }

        public Criteria andTimeworkedNotBetween(Long value1, Long value2) {
            addCriterion("timeworked not between", value1, value2, "timeworked");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table worklog
     *
     * @mbggenerated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table worklog
     *
     * @mbggenerated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}