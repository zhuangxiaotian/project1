package cn.topdeep.projgroup.entity.jiradb;

import common.entity.Page;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class AoD5e466WorkingDayPeriodExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table ao_d5e466_working_day_period
     *
     * @mbggenerated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table ao_d5e466_working_day_period
     *
     * @mbggenerated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table ao_d5e466_working_day_period
     *
     * @mbggenerated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table ao_d5e466_working_day_period
     *
     * @mbggenerated
     */
    protected Page page;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ao_d5e466_working_day_period
     *
     * @mbggenerated
     */
    public AoD5e466WorkingDayPeriodExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ao_d5e466_working_day_period
     *
     * @mbggenerated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ao_d5e466_working_day_period
     *
     * @mbggenerated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ao_d5e466_working_day_period
     *
     * @mbggenerated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ao_d5e466_working_day_period
     *
     * @mbggenerated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ao_d5e466_working_day_period
     *
     * @mbggenerated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ao_d5e466_working_day_period
     *
     * @mbggenerated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ao_d5e466_working_day_period
     *
     * @mbggenerated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ao_d5e466_working_day_period
     *
     * @mbggenerated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ao_d5e466_working_day_period
     *
     * @mbggenerated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ao_d5e466_working_day_period
     *
     * @mbggenerated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ao_d5e466_working_day_period
     *
     * @mbggenerated
     */
    public void setPage(Page page) {
        this.page=page;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ao_d5e466_working_day_period
     *
     * @mbggenerated
     */
    public Page getPage() {
        return page;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table ao_d5e466_working_day_period
     *
     * @mbggenerated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("ID is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("ID is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Integer value) {
            addCriterion("ID =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Integer value) {
            addCriterion("ID <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Integer value) {
            addCriterion("ID >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("ID >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Integer value) {
            addCriterion("ID <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Integer value) {
            addCriterion("ID <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Integer> values) {
            addCriterion("ID in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Integer> values) {
            addCriterion("ID not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Integer value1, Integer value2) {
            addCriterion("ID between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Integer value1, Integer value2) {
            addCriterion("ID not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andColorcodeIsNull() {
            addCriterion("COLORCODE is null");
            return (Criteria) this;
        }

        public Criteria andColorcodeIsNotNull() {
            addCriterion("COLORCODE is not null");
            return (Criteria) this;
        }

        public Criteria andColorcodeEqualTo(String value) {
            addCriterion("COLORCODE =", value, "colorcode");
            return (Criteria) this;
        }

        public Criteria andColorcodeNotEqualTo(String value) {
            addCriterion("COLORCODE <>", value, "colorcode");
            return (Criteria) this;
        }

        public Criteria andColorcodeGreaterThan(String value) {
            addCriterion("COLORCODE >", value, "colorcode");
            return (Criteria) this;
        }

        public Criteria andColorcodeGreaterThanOrEqualTo(String value) {
            addCriterion("COLORCODE >=", value, "colorcode");
            return (Criteria) this;
        }

        public Criteria andColorcodeLessThan(String value) {
            addCriterion("COLORCODE <", value, "colorcode");
            return (Criteria) this;
        }

        public Criteria andColorcodeLessThanOrEqualTo(String value) {
            addCriterion("COLORCODE <=", value, "colorcode");
            return (Criteria) this;
        }

        public Criteria andColorcodeLike(String value) {
            addCriterion("COLORCODE like", value, "colorcode");
            return (Criteria) this;
        }

        public Criteria andColorcodeNotLike(String value) {
            addCriterion("COLORCODE not like", value, "colorcode");
            return (Criteria) this;
        }

        public Criteria andColorcodeIn(List<String> values) {
            addCriterion("COLORCODE in", values, "colorcode");
            return (Criteria) this;
        }

        public Criteria andColorcodeNotIn(List<String> values) {
            addCriterion("COLORCODE not in", values, "colorcode");
            return (Criteria) this;
        }

        public Criteria andColorcodeBetween(String value1, String value2) {
            addCriterion("COLORCODE between", value1, value2, "colorcode");
            return (Criteria) this;
        }

        public Criteria andColorcodeNotBetween(String value1, String value2) {
            addCriterion("COLORCODE not between", value1, value2, "colorcode");
            return (Criteria) this;
        }

        public Criteria andDescriptionIsNull() {
            addCriterion("DESCRIPTION is null");
            return (Criteria) this;
        }

        public Criteria andDescriptionIsNotNull() {
            addCriterion("DESCRIPTION is not null");
            return (Criteria) this;
        }

        public Criteria andDescriptionEqualTo(String value) {
            addCriterion("DESCRIPTION =", value, "description");
            return (Criteria) this;
        }

        public Criteria andDescriptionNotEqualTo(String value) {
            addCriterion("DESCRIPTION <>", value, "description");
            return (Criteria) this;
        }

        public Criteria andDescriptionGreaterThan(String value) {
            addCriterion("DESCRIPTION >", value, "description");
            return (Criteria) this;
        }

        public Criteria andDescriptionGreaterThanOrEqualTo(String value) {
            addCriterion("DESCRIPTION >=", value, "description");
            return (Criteria) this;
        }

        public Criteria andDescriptionLessThan(String value) {
            addCriterion("DESCRIPTION <", value, "description");
            return (Criteria) this;
        }

        public Criteria andDescriptionLessThanOrEqualTo(String value) {
            addCriterion("DESCRIPTION <=", value, "description");
            return (Criteria) this;
        }

        public Criteria andDescriptionLike(String value) {
            addCriterion("DESCRIPTION like", value, "description");
            return (Criteria) this;
        }

        public Criteria andDescriptionNotLike(String value) {
            addCriterion("DESCRIPTION not like", value, "description");
            return (Criteria) this;
        }

        public Criteria andDescriptionIn(List<String> values) {
            addCriterion("DESCRIPTION in", values, "description");
            return (Criteria) this;
        }

        public Criteria andDescriptionNotIn(List<String> values) {
            addCriterion("DESCRIPTION not in", values, "description");
            return (Criteria) this;
        }

        public Criteria andDescriptionBetween(String value1, String value2) {
            addCriterion("DESCRIPTION between", value1, value2, "description");
            return (Criteria) this;
        }

        public Criteria andDescriptionNotBetween(String value1, String value2) {
            addCriterion("DESCRIPTION not between", value1, value2, "description");
            return (Criteria) this;
        }

        public Criteria andEnddateIsNull() {
            addCriterion("ENDDATE is null");
            return (Criteria) this;
        }

        public Criteria andEnddateIsNotNull() {
            addCriterion("ENDDATE is not null");
            return (Criteria) this;
        }

        public Criteria andEnddateEqualTo(Date value) {
            addCriterion("ENDDATE =", value, "enddate");
            return (Criteria) this;
        }

        public Criteria andEnddateNotEqualTo(Date value) {
            addCriterion("ENDDATE <>", value, "enddate");
            return (Criteria) this;
        }

        public Criteria andEnddateGreaterThan(Date value) {
            addCriterion("ENDDATE >", value, "enddate");
            return (Criteria) this;
        }

        public Criteria andEnddateGreaterThanOrEqualTo(Date value) {
            addCriterion("ENDDATE >=", value, "enddate");
            return (Criteria) this;
        }

        public Criteria andEnddateLessThan(Date value) {
            addCriterion("ENDDATE <", value, "enddate");
            return (Criteria) this;
        }

        public Criteria andEnddateLessThanOrEqualTo(Date value) {
            addCriterion("ENDDATE <=", value, "enddate");
            return (Criteria) this;
        }

        public Criteria andEnddateIn(List<Date> values) {
            addCriterion("ENDDATE in", values, "enddate");
            return (Criteria) this;
        }

        public Criteria andEnddateNotIn(List<Date> values) {
            addCriterion("ENDDATE not in", values, "enddate");
            return (Criteria) this;
        }

        public Criteria andEnddateBetween(Date value1, Date value2) {
            addCriterion("ENDDATE between", value1, value2, "enddate");
            return (Criteria) this;
        }

        public Criteria andEnddateNotBetween(Date value1, Date value2) {
            addCriterion("ENDDATE not between", value1, value2, "enddate");
            return (Criteria) this;
        }

        public Criteria andFridayIsNull() {
            addCriterion("FRIDAY is null");
            return (Criteria) this;
        }

        public Criteria andFridayIsNotNull() {
            addCriterion("FRIDAY is not null");
            return (Criteria) this;
        }

        public Criteria andFridayEqualTo(Double value) {
            addCriterion("FRIDAY =", value, "friday");
            return (Criteria) this;
        }

        public Criteria andFridayNotEqualTo(Double value) {
            addCriterion("FRIDAY <>", value, "friday");
            return (Criteria) this;
        }

        public Criteria andFridayGreaterThan(Double value) {
            addCriterion("FRIDAY >", value, "friday");
            return (Criteria) this;
        }

        public Criteria andFridayGreaterThanOrEqualTo(Double value) {
            addCriterion("FRIDAY >=", value, "friday");
            return (Criteria) this;
        }

        public Criteria andFridayLessThan(Double value) {
            addCriterion("FRIDAY <", value, "friday");
            return (Criteria) this;
        }

        public Criteria andFridayLessThanOrEqualTo(Double value) {
            addCriterion("FRIDAY <=", value, "friday");
            return (Criteria) this;
        }

        public Criteria andFridayIn(List<Double> values) {
            addCriterion("FRIDAY in", values, "friday");
            return (Criteria) this;
        }

        public Criteria andFridayNotIn(List<Double> values) {
            addCriterion("FRIDAY not in", values, "friday");
            return (Criteria) this;
        }

        public Criteria andFridayBetween(Double value1, Double value2) {
            addCriterion("FRIDAY between", value1, value2, "friday");
            return (Criteria) this;
        }

        public Criteria andFridayNotBetween(Double value1, Double value2) {
            addCriterion("FRIDAY not between", value1, value2, "friday");
            return (Criteria) this;
        }

        public Criteria andMondayIsNull() {
            addCriterion("MONDAY is null");
            return (Criteria) this;
        }

        public Criteria andMondayIsNotNull() {
            addCriterion("MONDAY is not null");
            return (Criteria) this;
        }

        public Criteria andMondayEqualTo(Double value) {
            addCriterion("MONDAY =", value, "monday");
            return (Criteria) this;
        }

        public Criteria andMondayNotEqualTo(Double value) {
            addCriterion("MONDAY <>", value, "monday");
            return (Criteria) this;
        }

        public Criteria andMondayGreaterThan(Double value) {
            addCriterion("MONDAY >", value, "monday");
            return (Criteria) this;
        }

        public Criteria andMondayGreaterThanOrEqualTo(Double value) {
            addCriterion("MONDAY >=", value, "monday");
            return (Criteria) this;
        }

        public Criteria andMondayLessThan(Double value) {
            addCriterion("MONDAY <", value, "monday");
            return (Criteria) this;
        }

        public Criteria andMondayLessThanOrEqualTo(Double value) {
            addCriterion("MONDAY <=", value, "monday");
            return (Criteria) this;
        }

        public Criteria andMondayIn(List<Double> values) {
            addCriterion("MONDAY in", values, "monday");
            return (Criteria) this;
        }

        public Criteria andMondayNotIn(List<Double> values) {
            addCriterion("MONDAY not in", values, "monday");
            return (Criteria) this;
        }

        public Criteria andMondayBetween(Double value1, Double value2) {
            addCriterion("MONDAY between", value1, value2, "monday");
            return (Criteria) this;
        }

        public Criteria andMondayNotBetween(Double value1, Double value2) {
            addCriterion("MONDAY not between", value1, value2, "monday");
            return (Criteria) this;
        }

        public Criteria andSaturdayIsNull() {
            addCriterion("SATURDAY is null");
            return (Criteria) this;
        }

        public Criteria andSaturdayIsNotNull() {
            addCriterion("SATURDAY is not null");
            return (Criteria) this;
        }

        public Criteria andSaturdayEqualTo(Double value) {
            addCriterion("SATURDAY =", value, "saturday");
            return (Criteria) this;
        }

        public Criteria andSaturdayNotEqualTo(Double value) {
            addCriterion("SATURDAY <>", value, "saturday");
            return (Criteria) this;
        }

        public Criteria andSaturdayGreaterThan(Double value) {
            addCriterion("SATURDAY >", value, "saturday");
            return (Criteria) this;
        }

        public Criteria andSaturdayGreaterThanOrEqualTo(Double value) {
            addCriterion("SATURDAY >=", value, "saturday");
            return (Criteria) this;
        }

        public Criteria andSaturdayLessThan(Double value) {
            addCriterion("SATURDAY <", value, "saturday");
            return (Criteria) this;
        }

        public Criteria andSaturdayLessThanOrEqualTo(Double value) {
            addCriterion("SATURDAY <=", value, "saturday");
            return (Criteria) this;
        }

        public Criteria andSaturdayIn(List<Double> values) {
            addCriterion("SATURDAY in", values, "saturday");
            return (Criteria) this;
        }

        public Criteria andSaturdayNotIn(List<Double> values) {
            addCriterion("SATURDAY not in", values, "saturday");
            return (Criteria) this;
        }

        public Criteria andSaturdayBetween(Double value1, Double value2) {
            addCriterion("SATURDAY between", value1, value2, "saturday");
            return (Criteria) this;
        }

        public Criteria andSaturdayNotBetween(Double value1, Double value2) {
            addCriterion("SATURDAY not between", value1, value2, "saturday");
            return (Criteria) this;
        }

        public Criteria andStartdateIsNull() {
            addCriterion("STARTDATE is null");
            return (Criteria) this;
        }

        public Criteria andStartdateIsNotNull() {
            addCriterion("STARTDATE is not null");
            return (Criteria) this;
        }

        public Criteria andStartdateEqualTo(Date value) {
            addCriterion("STARTDATE =", value, "startdate");
            return (Criteria) this;
        }

        public Criteria andStartdateNotEqualTo(Date value) {
            addCriterion("STARTDATE <>", value, "startdate");
            return (Criteria) this;
        }

        public Criteria andStartdateGreaterThan(Date value) {
            addCriterion("STARTDATE >", value, "startdate");
            return (Criteria) this;
        }

        public Criteria andStartdateGreaterThanOrEqualTo(Date value) {
            addCriterion("STARTDATE >=", value, "startdate");
            return (Criteria) this;
        }

        public Criteria andStartdateLessThan(Date value) {
            addCriterion("STARTDATE <", value, "startdate");
            return (Criteria) this;
        }

        public Criteria andStartdateLessThanOrEqualTo(Date value) {
            addCriterion("STARTDATE <=", value, "startdate");
            return (Criteria) this;
        }

        public Criteria andStartdateIn(List<Date> values) {
            addCriterion("STARTDATE in", values, "startdate");
            return (Criteria) this;
        }

        public Criteria andStartdateNotIn(List<Date> values) {
            addCriterion("STARTDATE not in", values, "startdate");
            return (Criteria) this;
        }

        public Criteria andStartdateBetween(Date value1, Date value2) {
            addCriterion("STARTDATE between", value1, value2, "startdate");
            return (Criteria) this;
        }

        public Criteria andStartdateNotBetween(Date value1, Date value2) {
            addCriterion("STARTDATE not between", value1, value2, "startdate");
            return (Criteria) this;
        }

        public Criteria andSundayIsNull() {
            addCriterion("SUNDAY is null");
            return (Criteria) this;
        }

        public Criteria andSundayIsNotNull() {
            addCriterion("SUNDAY is not null");
            return (Criteria) this;
        }

        public Criteria andSundayEqualTo(Double value) {
            addCriterion("SUNDAY =", value, "sunday");
            return (Criteria) this;
        }

        public Criteria andSundayNotEqualTo(Double value) {
            addCriterion("SUNDAY <>", value, "sunday");
            return (Criteria) this;
        }

        public Criteria andSundayGreaterThan(Double value) {
            addCriterion("SUNDAY >", value, "sunday");
            return (Criteria) this;
        }

        public Criteria andSundayGreaterThanOrEqualTo(Double value) {
            addCriterion("SUNDAY >=", value, "sunday");
            return (Criteria) this;
        }

        public Criteria andSundayLessThan(Double value) {
            addCriterion("SUNDAY <", value, "sunday");
            return (Criteria) this;
        }

        public Criteria andSundayLessThanOrEqualTo(Double value) {
            addCriterion("SUNDAY <=", value, "sunday");
            return (Criteria) this;
        }

        public Criteria andSundayIn(List<Double> values) {
            addCriterion("SUNDAY in", values, "sunday");
            return (Criteria) this;
        }

        public Criteria andSundayNotIn(List<Double> values) {
            addCriterion("SUNDAY not in", values, "sunday");
            return (Criteria) this;
        }

        public Criteria andSundayBetween(Double value1, Double value2) {
            addCriterion("SUNDAY between", value1, value2, "sunday");
            return (Criteria) this;
        }

        public Criteria andSundayNotBetween(Double value1, Double value2) {
            addCriterion("SUNDAY not between", value1, value2, "sunday");
            return (Criteria) this;
        }

        public Criteria andThursdayIsNull() {
            addCriterion("THURSDAY is null");
            return (Criteria) this;
        }

        public Criteria andThursdayIsNotNull() {
            addCriterion("THURSDAY is not null");
            return (Criteria) this;
        }

        public Criteria andThursdayEqualTo(Double value) {
            addCriterion("THURSDAY =", value, "thursday");
            return (Criteria) this;
        }

        public Criteria andThursdayNotEqualTo(Double value) {
            addCriterion("THURSDAY <>", value, "thursday");
            return (Criteria) this;
        }

        public Criteria andThursdayGreaterThan(Double value) {
            addCriterion("THURSDAY >", value, "thursday");
            return (Criteria) this;
        }

        public Criteria andThursdayGreaterThanOrEqualTo(Double value) {
            addCriterion("THURSDAY >=", value, "thursday");
            return (Criteria) this;
        }

        public Criteria andThursdayLessThan(Double value) {
            addCriterion("THURSDAY <", value, "thursday");
            return (Criteria) this;
        }

        public Criteria andThursdayLessThanOrEqualTo(Double value) {
            addCriterion("THURSDAY <=", value, "thursday");
            return (Criteria) this;
        }

        public Criteria andThursdayIn(List<Double> values) {
            addCriterion("THURSDAY in", values, "thursday");
            return (Criteria) this;
        }

        public Criteria andThursdayNotIn(List<Double> values) {
            addCriterion("THURSDAY not in", values, "thursday");
            return (Criteria) this;
        }

        public Criteria andThursdayBetween(Double value1, Double value2) {
            addCriterion("THURSDAY between", value1, value2, "thursday");
            return (Criteria) this;
        }

        public Criteria andThursdayNotBetween(Double value1, Double value2) {
            addCriterion("THURSDAY not between", value1, value2, "thursday");
            return (Criteria) this;
        }

        public Criteria andTuesdayIsNull() {
            addCriterion("TUESDAY is null");
            return (Criteria) this;
        }

        public Criteria andTuesdayIsNotNull() {
            addCriterion("TUESDAY is not null");
            return (Criteria) this;
        }

        public Criteria andTuesdayEqualTo(Double value) {
            addCriterion("TUESDAY =", value, "tuesday");
            return (Criteria) this;
        }

        public Criteria andTuesdayNotEqualTo(Double value) {
            addCriterion("TUESDAY <>", value, "tuesday");
            return (Criteria) this;
        }

        public Criteria andTuesdayGreaterThan(Double value) {
            addCriterion("TUESDAY >", value, "tuesday");
            return (Criteria) this;
        }

        public Criteria andTuesdayGreaterThanOrEqualTo(Double value) {
            addCriterion("TUESDAY >=", value, "tuesday");
            return (Criteria) this;
        }

        public Criteria andTuesdayLessThan(Double value) {
            addCriterion("TUESDAY <", value, "tuesday");
            return (Criteria) this;
        }

        public Criteria andTuesdayLessThanOrEqualTo(Double value) {
            addCriterion("TUESDAY <=", value, "tuesday");
            return (Criteria) this;
        }

        public Criteria andTuesdayIn(List<Double> values) {
            addCriterion("TUESDAY in", values, "tuesday");
            return (Criteria) this;
        }

        public Criteria andTuesdayNotIn(List<Double> values) {
            addCriterion("TUESDAY not in", values, "tuesday");
            return (Criteria) this;
        }

        public Criteria andTuesdayBetween(Double value1, Double value2) {
            addCriterion("TUESDAY between", value1, value2, "tuesday");
            return (Criteria) this;
        }

        public Criteria andTuesdayNotBetween(Double value1, Double value2) {
            addCriterion("TUESDAY not between", value1, value2, "tuesday");
            return (Criteria) this;
        }

        public Criteria andWednesdayIsNull() {
            addCriterion("WEDNESDAY is null");
            return (Criteria) this;
        }

        public Criteria andWednesdayIsNotNull() {
            addCriterion("WEDNESDAY is not null");
            return (Criteria) this;
        }

        public Criteria andWednesdayEqualTo(Double value) {
            addCriterion("WEDNESDAY =", value, "wednesday");
            return (Criteria) this;
        }

        public Criteria andWednesdayNotEqualTo(Double value) {
            addCriterion("WEDNESDAY <>", value, "wednesday");
            return (Criteria) this;
        }

        public Criteria andWednesdayGreaterThan(Double value) {
            addCriterion("WEDNESDAY >", value, "wednesday");
            return (Criteria) this;
        }

        public Criteria andWednesdayGreaterThanOrEqualTo(Double value) {
            addCriterion("WEDNESDAY >=", value, "wednesday");
            return (Criteria) this;
        }

        public Criteria andWednesdayLessThan(Double value) {
            addCriterion("WEDNESDAY <", value, "wednesday");
            return (Criteria) this;
        }

        public Criteria andWednesdayLessThanOrEqualTo(Double value) {
            addCriterion("WEDNESDAY <=", value, "wednesday");
            return (Criteria) this;
        }

        public Criteria andWednesdayIn(List<Double> values) {
            addCriterion("WEDNESDAY in", values, "wednesday");
            return (Criteria) this;
        }

        public Criteria andWednesdayNotIn(List<Double> values) {
            addCriterion("WEDNESDAY not in", values, "wednesday");
            return (Criteria) this;
        }

        public Criteria andWednesdayBetween(Double value1, Double value2) {
            addCriterion("WEDNESDAY between", value1, value2, "wednesday");
            return (Criteria) this;
        }

        public Criteria andWednesdayNotBetween(Double value1, Double value2) {
            addCriterion("WEDNESDAY not between", value1, value2, "wednesday");
            return (Criteria) this;
        }

        public Criteria andWorkingDayIdIsNull() {
            addCriterion("WORKING_DAY_ID is null");
            return (Criteria) this;
        }

        public Criteria andWorkingDayIdIsNotNull() {
            addCriterion("WORKING_DAY_ID is not null");
            return (Criteria) this;
        }

        public Criteria andWorkingDayIdEqualTo(Integer value) {
            addCriterion("WORKING_DAY_ID =", value, "workingDayId");
            return (Criteria) this;
        }

        public Criteria andWorkingDayIdNotEqualTo(Integer value) {
            addCriterion("WORKING_DAY_ID <>", value, "workingDayId");
            return (Criteria) this;
        }

        public Criteria andWorkingDayIdGreaterThan(Integer value) {
            addCriterion("WORKING_DAY_ID >", value, "workingDayId");
            return (Criteria) this;
        }

        public Criteria andWorkingDayIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("WORKING_DAY_ID >=", value, "workingDayId");
            return (Criteria) this;
        }

        public Criteria andWorkingDayIdLessThan(Integer value) {
            addCriterion("WORKING_DAY_ID <", value, "workingDayId");
            return (Criteria) this;
        }

        public Criteria andWorkingDayIdLessThanOrEqualTo(Integer value) {
            addCriterion("WORKING_DAY_ID <=", value, "workingDayId");
            return (Criteria) this;
        }

        public Criteria andWorkingDayIdIn(List<Integer> values) {
            addCriterion("WORKING_DAY_ID in", values, "workingDayId");
            return (Criteria) this;
        }

        public Criteria andWorkingDayIdNotIn(List<Integer> values) {
            addCriterion("WORKING_DAY_ID not in", values, "workingDayId");
            return (Criteria) this;
        }

        public Criteria andWorkingDayIdBetween(Integer value1, Integer value2) {
            addCriterion("WORKING_DAY_ID between", value1, value2, "workingDayId");
            return (Criteria) this;
        }

        public Criteria andWorkingDayIdNotBetween(Integer value1, Integer value2) {
            addCriterion("WORKING_DAY_ID not between", value1, value2, "workingDayId");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table ao_d5e466_working_day_period
     *
     * @mbggenerated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table ao_d5e466_working_day_period
     *
     * @mbggenerated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}