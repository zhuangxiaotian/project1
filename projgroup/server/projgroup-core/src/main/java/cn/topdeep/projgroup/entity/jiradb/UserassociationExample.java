package cn.topdeep.projgroup.entity.jiradb;

import common.entity.Page;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class UserassociationExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table userassociation
     *
     * @mbggenerated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table userassociation
     *
     * @mbggenerated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table userassociation
     *
     * @mbggenerated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table userassociation
     *
     * @mbggenerated
     */
    protected Page page;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table userassociation
     *
     * @mbggenerated
     */
    public UserassociationExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table userassociation
     *
     * @mbggenerated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table userassociation
     *
     * @mbggenerated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table userassociation
     *
     * @mbggenerated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table userassociation
     *
     * @mbggenerated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table userassociation
     *
     * @mbggenerated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table userassociation
     *
     * @mbggenerated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table userassociation
     *
     * @mbggenerated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table userassociation
     *
     * @mbggenerated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table userassociation
     *
     * @mbggenerated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table userassociation
     *
     * @mbggenerated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table userassociation
     *
     * @mbggenerated
     */
    public void setPage(Page page) {
        this.page=page;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table userassociation
     *
     * @mbggenerated
     */
    public Page getPage() {
        return page;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table userassociation
     *
     * @mbggenerated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andSourceNameIsNull() {
            addCriterion("SOURCE_NAME is null");
            return (Criteria) this;
        }

        public Criteria andSourceNameIsNotNull() {
            addCriterion("SOURCE_NAME is not null");
            return (Criteria) this;
        }

        public Criteria andSourceNameEqualTo(String value) {
            addCriterion("SOURCE_NAME =", value, "sourceName");
            return (Criteria) this;
        }

        public Criteria andSourceNameNotEqualTo(String value) {
            addCriterion("SOURCE_NAME <>", value, "sourceName");
            return (Criteria) this;
        }

        public Criteria andSourceNameGreaterThan(String value) {
            addCriterion("SOURCE_NAME >", value, "sourceName");
            return (Criteria) this;
        }

        public Criteria andSourceNameGreaterThanOrEqualTo(String value) {
            addCriterion("SOURCE_NAME >=", value, "sourceName");
            return (Criteria) this;
        }

        public Criteria andSourceNameLessThan(String value) {
            addCriterion("SOURCE_NAME <", value, "sourceName");
            return (Criteria) this;
        }

        public Criteria andSourceNameLessThanOrEqualTo(String value) {
            addCriterion("SOURCE_NAME <=", value, "sourceName");
            return (Criteria) this;
        }

        public Criteria andSourceNameLike(String value) {
            addCriterion("SOURCE_NAME like", value, "sourceName");
            return (Criteria) this;
        }

        public Criteria andSourceNameNotLike(String value) {
            addCriterion("SOURCE_NAME not like", value, "sourceName");
            return (Criteria) this;
        }

        public Criteria andSourceNameIn(List<String> values) {
            addCriterion("SOURCE_NAME in", values, "sourceName");
            return (Criteria) this;
        }

        public Criteria andSourceNameNotIn(List<String> values) {
            addCriterion("SOURCE_NAME not in", values, "sourceName");
            return (Criteria) this;
        }

        public Criteria andSourceNameBetween(String value1, String value2) {
            addCriterion("SOURCE_NAME between", value1, value2, "sourceName");
            return (Criteria) this;
        }

        public Criteria andSourceNameNotBetween(String value1, String value2) {
            addCriterion("SOURCE_NAME not between", value1, value2, "sourceName");
            return (Criteria) this;
        }

        public Criteria andSinkNodeIdIsNull() {
            addCriterion("SINK_NODE_ID is null");
            return (Criteria) this;
        }

        public Criteria andSinkNodeIdIsNotNull() {
            addCriterion("SINK_NODE_ID is not null");
            return (Criteria) this;
        }

        public Criteria andSinkNodeIdEqualTo(Long value) {
            addCriterion("SINK_NODE_ID =", value, "sinkNodeId");
            return (Criteria) this;
        }

        public Criteria andSinkNodeIdNotEqualTo(Long value) {
            addCriterion("SINK_NODE_ID <>", value, "sinkNodeId");
            return (Criteria) this;
        }

        public Criteria andSinkNodeIdGreaterThan(Long value) {
            addCriterion("SINK_NODE_ID >", value, "sinkNodeId");
            return (Criteria) this;
        }

        public Criteria andSinkNodeIdGreaterThanOrEqualTo(Long value) {
            addCriterion("SINK_NODE_ID >=", value, "sinkNodeId");
            return (Criteria) this;
        }

        public Criteria andSinkNodeIdLessThan(Long value) {
            addCriterion("SINK_NODE_ID <", value, "sinkNodeId");
            return (Criteria) this;
        }

        public Criteria andSinkNodeIdLessThanOrEqualTo(Long value) {
            addCriterion("SINK_NODE_ID <=", value, "sinkNodeId");
            return (Criteria) this;
        }

        public Criteria andSinkNodeIdIn(List<Long> values) {
            addCriterion("SINK_NODE_ID in", values, "sinkNodeId");
            return (Criteria) this;
        }

        public Criteria andSinkNodeIdNotIn(List<Long> values) {
            addCriterion("SINK_NODE_ID not in", values, "sinkNodeId");
            return (Criteria) this;
        }

        public Criteria andSinkNodeIdBetween(Long value1, Long value2) {
            addCriterion("SINK_NODE_ID between", value1, value2, "sinkNodeId");
            return (Criteria) this;
        }

        public Criteria andSinkNodeIdNotBetween(Long value1, Long value2) {
            addCriterion("SINK_NODE_ID not between", value1, value2, "sinkNodeId");
            return (Criteria) this;
        }

        public Criteria andSinkNodeEntityIsNull() {
            addCriterion("SINK_NODE_ENTITY is null");
            return (Criteria) this;
        }

        public Criteria andSinkNodeEntityIsNotNull() {
            addCriterion("SINK_NODE_ENTITY is not null");
            return (Criteria) this;
        }

        public Criteria andSinkNodeEntityEqualTo(String value) {
            addCriterion("SINK_NODE_ENTITY =", value, "sinkNodeEntity");
            return (Criteria) this;
        }

        public Criteria andSinkNodeEntityNotEqualTo(String value) {
            addCriterion("SINK_NODE_ENTITY <>", value, "sinkNodeEntity");
            return (Criteria) this;
        }

        public Criteria andSinkNodeEntityGreaterThan(String value) {
            addCriterion("SINK_NODE_ENTITY >", value, "sinkNodeEntity");
            return (Criteria) this;
        }

        public Criteria andSinkNodeEntityGreaterThanOrEqualTo(String value) {
            addCriterion("SINK_NODE_ENTITY >=", value, "sinkNodeEntity");
            return (Criteria) this;
        }

        public Criteria andSinkNodeEntityLessThan(String value) {
            addCriterion("SINK_NODE_ENTITY <", value, "sinkNodeEntity");
            return (Criteria) this;
        }

        public Criteria andSinkNodeEntityLessThanOrEqualTo(String value) {
            addCriterion("SINK_NODE_ENTITY <=", value, "sinkNodeEntity");
            return (Criteria) this;
        }

        public Criteria andSinkNodeEntityLike(String value) {
            addCriterion("SINK_NODE_ENTITY like", value, "sinkNodeEntity");
            return (Criteria) this;
        }

        public Criteria andSinkNodeEntityNotLike(String value) {
            addCriterion("SINK_NODE_ENTITY not like", value, "sinkNodeEntity");
            return (Criteria) this;
        }

        public Criteria andSinkNodeEntityIn(List<String> values) {
            addCriterion("SINK_NODE_ENTITY in", values, "sinkNodeEntity");
            return (Criteria) this;
        }

        public Criteria andSinkNodeEntityNotIn(List<String> values) {
            addCriterion("SINK_NODE_ENTITY not in", values, "sinkNodeEntity");
            return (Criteria) this;
        }

        public Criteria andSinkNodeEntityBetween(String value1, String value2) {
            addCriterion("SINK_NODE_ENTITY between", value1, value2, "sinkNodeEntity");
            return (Criteria) this;
        }

        public Criteria andSinkNodeEntityNotBetween(String value1, String value2) {
            addCriterion("SINK_NODE_ENTITY not between", value1, value2, "sinkNodeEntity");
            return (Criteria) this;
        }

        public Criteria andAssociationTypeIsNull() {
            addCriterion("ASSOCIATION_TYPE is null");
            return (Criteria) this;
        }

        public Criteria andAssociationTypeIsNotNull() {
            addCriterion("ASSOCIATION_TYPE is not null");
            return (Criteria) this;
        }

        public Criteria andAssociationTypeEqualTo(String value) {
            addCriterion("ASSOCIATION_TYPE =", value, "associationType");
            return (Criteria) this;
        }

        public Criteria andAssociationTypeNotEqualTo(String value) {
            addCriterion("ASSOCIATION_TYPE <>", value, "associationType");
            return (Criteria) this;
        }

        public Criteria andAssociationTypeGreaterThan(String value) {
            addCriterion("ASSOCIATION_TYPE >", value, "associationType");
            return (Criteria) this;
        }

        public Criteria andAssociationTypeGreaterThanOrEqualTo(String value) {
            addCriterion("ASSOCIATION_TYPE >=", value, "associationType");
            return (Criteria) this;
        }

        public Criteria andAssociationTypeLessThan(String value) {
            addCriterion("ASSOCIATION_TYPE <", value, "associationType");
            return (Criteria) this;
        }

        public Criteria andAssociationTypeLessThanOrEqualTo(String value) {
            addCriterion("ASSOCIATION_TYPE <=", value, "associationType");
            return (Criteria) this;
        }

        public Criteria andAssociationTypeLike(String value) {
            addCriterion("ASSOCIATION_TYPE like", value, "associationType");
            return (Criteria) this;
        }

        public Criteria andAssociationTypeNotLike(String value) {
            addCriterion("ASSOCIATION_TYPE not like", value, "associationType");
            return (Criteria) this;
        }

        public Criteria andAssociationTypeIn(List<String> values) {
            addCriterion("ASSOCIATION_TYPE in", values, "associationType");
            return (Criteria) this;
        }

        public Criteria andAssociationTypeNotIn(List<String> values) {
            addCriterion("ASSOCIATION_TYPE not in", values, "associationType");
            return (Criteria) this;
        }

        public Criteria andAssociationTypeBetween(String value1, String value2) {
            addCriterion("ASSOCIATION_TYPE between", value1, value2, "associationType");
            return (Criteria) this;
        }

        public Criteria andAssociationTypeNotBetween(String value1, String value2) {
            addCriterion("ASSOCIATION_TYPE not between", value1, value2, "associationType");
            return (Criteria) this;
        }

        public Criteria andSequenceIsNull() {
            addCriterion("SEQUENCE is null");
            return (Criteria) this;
        }

        public Criteria andSequenceIsNotNull() {
            addCriterion("SEQUENCE is not null");
            return (Criteria) this;
        }

        public Criteria andSequenceEqualTo(Integer value) {
            addCriterion("SEQUENCE =", value, "sequence");
            return (Criteria) this;
        }

        public Criteria andSequenceNotEqualTo(Integer value) {
            addCriterion("SEQUENCE <>", value, "sequence");
            return (Criteria) this;
        }

        public Criteria andSequenceGreaterThan(Integer value) {
            addCriterion("SEQUENCE >", value, "sequence");
            return (Criteria) this;
        }

        public Criteria andSequenceGreaterThanOrEqualTo(Integer value) {
            addCriterion("SEQUENCE >=", value, "sequence");
            return (Criteria) this;
        }

        public Criteria andSequenceLessThan(Integer value) {
            addCriterion("SEQUENCE <", value, "sequence");
            return (Criteria) this;
        }

        public Criteria andSequenceLessThanOrEqualTo(Integer value) {
            addCriterion("SEQUENCE <=", value, "sequence");
            return (Criteria) this;
        }

        public Criteria andSequenceIn(List<Integer> values) {
            addCriterion("SEQUENCE in", values, "sequence");
            return (Criteria) this;
        }

        public Criteria andSequenceNotIn(List<Integer> values) {
            addCriterion("SEQUENCE not in", values, "sequence");
            return (Criteria) this;
        }

        public Criteria andSequenceBetween(Integer value1, Integer value2) {
            addCriterion("SEQUENCE between", value1, value2, "sequence");
            return (Criteria) this;
        }

        public Criteria andSequenceNotBetween(Integer value1, Integer value2) {
            addCriterion("SEQUENCE not between", value1, value2, "sequence");
            return (Criteria) this;
        }

        public Criteria andCreatedIsNull() {
            addCriterion("CREATED is null");
            return (Criteria) this;
        }

        public Criteria andCreatedIsNotNull() {
            addCriterion("CREATED is not null");
            return (Criteria) this;
        }

        public Criteria andCreatedEqualTo(Date value) {
            addCriterion("CREATED =", value, "created");
            return (Criteria) this;
        }

        public Criteria andCreatedNotEqualTo(Date value) {
            addCriterion("CREATED <>", value, "created");
            return (Criteria) this;
        }

        public Criteria andCreatedGreaterThan(Date value) {
            addCriterion("CREATED >", value, "created");
            return (Criteria) this;
        }

        public Criteria andCreatedGreaterThanOrEqualTo(Date value) {
            addCriterion("CREATED >=", value, "created");
            return (Criteria) this;
        }

        public Criteria andCreatedLessThan(Date value) {
            addCriterion("CREATED <", value, "created");
            return (Criteria) this;
        }

        public Criteria andCreatedLessThanOrEqualTo(Date value) {
            addCriterion("CREATED <=", value, "created");
            return (Criteria) this;
        }

        public Criteria andCreatedIn(List<Date> values) {
            addCriterion("CREATED in", values, "created");
            return (Criteria) this;
        }

        public Criteria andCreatedNotIn(List<Date> values) {
            addCriterion("CREATED not in", values, "created");
            return (Criteria) this;
        }

        public Criteria andCreatedBetween(Date value1, Date value2) {
            addCriterion("CREATED between", value1, value2, "created");
            return (Criteria) this;
        }

        public Criteria andCreatedNotBetween(Date value1, Date value2) {
            addCriterion("CREATED not between", value1, value2, "created");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table userassociation
     *
     * @mbggenerated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table userassociation
     *
     * @mbggenerated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}