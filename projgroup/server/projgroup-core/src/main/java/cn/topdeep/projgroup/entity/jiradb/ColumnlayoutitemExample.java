package cn.topdeep.projgroup.entity.jiradb;

import common.entity.Page;
import java.util.ArrayList;
import java.util.List;

public class ColumnlayoutitemExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table columnlayoutitem
     *
     * @mbggenerated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table columnlayoutitem
     *
     * @mbggenerated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table columnlayoutitem
     *
     * @mbggenerated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table columnlayoutitem
     *
     * @mbggenerated
     */
    protected Page page;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table columnlayoutitem
     *
     * @mbggenerated
     */
    public ColumnlayoutitemExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table columnlayoutitem
     *
     * @mbggenerated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table columnlayoutitem
     *
     * @mbggenerated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table columnlayoutitem
     *
     * @mbggenerated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table columnlayoutitem
     *
     * @mbggenerated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table columnlayoutitem
     *
     * @mbggenerated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table columnlayoutitem
     *
     * @mbggenerated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table columnlayoutitem
     *
     * @mbggenerated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table columnlayoutitem
     *
     * @mbggenerated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table columnlayoutitem
     *
     * @mbggenerated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table columnlayoutitem
     *
     * @mbggenerated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table columnlayoutitem
     *
     * @mbggenerated
     */
    public void setPage(Page page) {
        this.page=page;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table columnlayoutitem
     *
     * @mbggenerated
     */
    public Page getPage() {
        return page;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table columnlayoutitem
     *
     * @mbggenerated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("ID is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("ID is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Long value) {
            addCriterion("ID =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Long value) {
            addCriterion("ID <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Long value) {
            addCriterion("ID >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Long value) {
            addCriterion("ID >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Long value) {
            addCriterion("ID <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Long value) {
            addCriterion("ID <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Long> values) {
            addCriterion("ID in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Long> values) {
            addCriterion("ID not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Long value1, Long value2) {
            addCriterion("ID between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Long value1, Long value2) {
            addCriterion("ID not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andColumnlayoutIsNull() {
            addCriterion("COLUMNLAYOUT is null");
            return (Criteria) this;
        }

        public Criteria andColumnlayoutIsNotNull() {
            addCriterion("COLUMNLAYOUT is not null");
            return (Criteria) this;
        }

        public Criteria andColumnlayoutEqualTo(Long value) {
            addCriterion("COLUMNLAYOUT =", value, "columnlayout");
            return (Criteria) this;
        }

        public Criteria andColumnlayoutNotEqualTo(Long value) {
            addCriterion("COLUMNLAYOUT <>", value, "columnlayout");
            return (Criteria) this;
        }

        public Criteria andColumnlayoutGreaterThan(Long value) {
            addCriterion("COLUMNLAYOUT >", value, "columnlayout");
            return (Criteria) this;
        }

        public Criteria andColumnlayoutGreaterThanOrEqualTo(Long value) {
            addCriterion("COLUMNLAYOUT >=", value, "columnlayout");
            return (Criteria) this;
        }

        public Criteria andColumnlayoutLessThan(Long value) {
            addCriterion("COLUMNLAYOUT <", value, "columnlayout");
            return (Criteria) this;
        }

        public Criteria andColumnlayoutLessThanOrEqualTo(Long value) {
            addCriterion("COLUMNLAYOUT <=", value, "columnlayout");
            return (Criteria) this;
        }

        public Criteria andColumnlayoutIn(List<Long> values) {
            addCriterion("COLUMNLAYOUT in", values, "columnlayout");
            return (Criteria) this;
        }

        public Criteria andColumnlayoutNotIn(List<Long> values) {
            addCriterion("COLUMNLAYOUT not in", values, "columnlayout");
            return (Criteria) this;
        }

        public Criteria andColumnlayoutBetween(Long value1, Long value2) {
            addCriterion("COLUMNLAYOUT between", value1, value2, "columnlayout");
            return (Criteria) this;
        }

        public Criteria andColumnlayoutNotBetween(Long value1, Long value2) {
            addCriterion("COLUMNLAYOUT not between", value1, value2, "columnlayout");
            return (Criteria) this;
        }

        public Criteria andFieldidentifierIsNull() {
            addCriterion("FIELDIDENTIFIER is null");
            return (Criteria) this;
        }

        public Criteria andFieldidentifierIsNotNull() {
            addCriterion("FIELDIDENTIFIER is not null");
            return (Criteria) this;
        }

        public Criteria andFieldidentifierEqualTo(String value) {
            addCriterion("FIELDIDENTIFIER =", value, "fieldidentifier");
            return (Criteria) this;
        }

        public Criteria andFieldidentifierNotEqualTo(String value) {
            addCriterion("FIELDIDENTIFIER <>", value, "fieldidentifier");
            return (Criteria) this;
        }

        public Criteria andFieldidentifierGreaterThan(String value) {
            addCriterion("FIELDIDENTIFIER >", value, "fieldidentifier");
            return (Criteria) this;
        }

        public Criteria andFieldidentifierGreaterThanOrEqualTo(String value) {
            addCriterion("FIELDIDENTIFIER >=", value, "fieldidentifier");
            return (Criteria) this;
        }

        public Criteria andFieldidentifierLessThan(String value) {
            addCriterion("FIELDIDENTIFIER <", value, "fieldidentifier");
            return (Criteria) this;
        }

        public Criteria andFieldidentifierLessThanOrEqualTo(String value) {
            addCriterion("FIELDIDENTIFIER <=", value, "fieldidentifier");
            return (Criteria) this;
        }

        public Criteria andFieldidentifierLike(String value) {
            addCriterion("FIELDIDENTIFIER like", value, "fieldidentifier");
            return (Criteria) this;
        }

        public Criteria andFieldidentifierNotLike(String value) {
            addCriterion("FIELDIDENTIFIER not like", value, "fieldidentifier");
            return (Criteria) this;
        }

        public Criteria andFieldidentifierIn(List<String> values) {
            addCriterion("FIELDIDENTIFIER in", values, "fieldidentifier");
            return (Criteria) this;
        }

        public Criteria andFieldidentifierNotIn(List<String> values) {
            addCriterion("FIELDIDENTIFIER not in", values, "fieldidentifier");
            return (Criteria) this;
        }

        public Criteria andFieldidentifierBetween(String value1, String value2) {
            addCriterion("FIELDIDENTIFIER between", value1, value2, "fieldidentifier");
            return (Criteria) this;
        }

        public Criteria andFieldidentifierNotBetween(String value1, String value2) {
            addCriterion("FIELDIDENTIFIER not between", value1, value2, "fieldidentifier");
            return (Criteria) this;
        }

        public Criteria andHorizontalpositionIsNull() {
            addCriterion("HORIZONTALPOSITION is null");
            return (Criteria) this;
        }

        public Criteria andHorizontalpositionIsNotNull() {
            addCriterion("HORIZONTALPOSITION is not null");
            return (Criteria) this;
        }

        public Criteria andHorizontalpositionEqualTo(Long value) {
            addCriterion("HORIZONTALPOSITION =", value, "horizontalposition");
            return (Criteria) this;
        }

        public Criteria andHorizontalpositionNotEqualTo(Long value) {
            addCriterion("HORIZONTALPOSITION <>", value, "horizontalposition");
            return (Criteria) this;
        }

        public Criteria andHorizontalpositionGreaterThan(Long value) {
            addCriterion("HORIZONTALPOSITION >", value, "horizontalposition");
            return (Criteria) this;
        }

        public Criteria andHorizontalpositionGreaterThanOrEqualTo(Long value) {
            addCriterion("HORIZONTALPOSITION >=", value, "horizontalposition");
            return (Criteria) this;
        }

        public Criteria andHorizontalpositionLessThan(Long value) {
            addCriterion("HORIZONTALPOSITION <", value, "horizontalposition");
            return (Criteria) this;
        }

        public Criteria andHorizontalpositionLessThanOrEqualTo(Long value) {
            addCriterion("HORIZONTALPOSITION <=", value, "horizontalposition");
            return (Criteria) this;
        }

        public Criteria andHorizontalpositionIn(List<Long> values) {
            addCriterion("HORIZONTALPOSITION in", values, "horizontalposition");
            return (Criteria) this;
        }

        public Criteria andHorizontalpositionNotIn(List<Long> values) {
            addCriterion("HORIZONTALPOSITION not in", values, "horizontalposition");
            return (Criteria) this;
        }

        public Criteria andHorizontalpositionBetween(Long value1, Long value2) {
            addCriterion("HORIZONTALPOSITION between", value1, value2, "horizontalposition");
            return (Criteria) this;
        }

        public Criteria andHorizontalpositionNotBetween(Long value1, Long value2) {
            addCriterion("HORIZONTALPOSITION not between", value1, value2, "horizontalposition");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table columnlayoutitem
     *
     * @mbggenerated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table columnlayoutitem
     *
     * @mbggenerated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}